option, warn,info;
!system,"ln -s /afs/cern.ch/eng/acc-models/lhc/2022/ acc-models-lhc";

beam, sequence=lhcb1, bv=1,
  particle=proton, charge=1, mass=0.938272046,
  energy= 450,   npart=1.2e11,kbunch=2556,
  ex=5.2126224777777785e-09,ey=5.2126224777777785e-09;

beam, sequence=lhcb2, bv=-1,
  particle=proton, charge=1, mass=0.938272046,
  energy= 450,   npart=1.2e11,kbunch=2556,
  ex=5.2126224777777785e-09,ey=5.2126224777777785e-09;

if (0 == 1) {
Option, -echo, -warn,-info;
call,file="acc-models-lhc/lhc.seq";
call,file="acc-models-lhc/operation/optics/R2022a_A11mC11mA10mL10m.madx";
Option, echo,warn,info;
set, format='.16e';
use, sequence=lhcb1;
use, sequence=lhcb2;
save, sequence=lhcb1, file='lhcb1_saved.seq';
save, sequence=lhcb2, file='lhcb2_saved.seq';
set, format='18.10g';
}

option, -echo, -warn, -info;
call, file='lhcb1_saved.seq';
call, file='lhcb2_saved.seq';
option, echo, warn;

use, sequence=lhcb1;
use, sequence=lhcb2;

select, flag=twiss, pattern=BPM, column= name,s, betx,bety, mux, muy, dx, dy,x,y;
select, flag=twiss, pattern=IP, column= name,s, betx,bety, mux, muy, dx, dy,x,y;
select, flag=twiss, pattern=MO, column= name,s, betx,bety, mux, muy, dx, dy,x,y;

!twiss, sequence=lhcb1, file="twiss_t_b1";
!twiss, sequence=lhcb2, file="twiss_t_b2";

! Tune change and chroma
dQx.b1_op=-0.035;
dQy.b1_op=-0.025;
dQpx.b1_op=15;
dQpy.b1_op=15;

dQx.b2_op=-0.035;
dQy.b2_op=-0.025;
dQpx.b2_op=15;
dQpy.b2_op=15;

! Phase change

a1 = -1.22598e-05;
a2 = -1.24548e-05;
b1 = -2.89785e-05;
b2 = -2.88736e-05;

kqf.a12 = kqf.a12 + a1 ;
kqf.a23 = kqf.a23 + a1 ;
kqf.a34 = kqf.a34 + a1 ;
kqf.a45 = kqf.a45 + a1 ;
kqf.a56 = kqf.a56 - a2 ;
kqf.a67 = kqf.a67 - a2 ;
kqf.a78 = kqf.a78 - a2 ;
kqf.a81 = kqf.a81 - a2 ;
kqd.a12 = kqd.a12 + b1 ;
kqd.a23 = kqd.a23 + b1 ;
kqd.a34 = kqd.a34 + b1 ;
kqd.a45 = kqd.a45 + b1 ;
kqd.a56 = kqd.a56 - b2 ;
kqd.a67 = kqd.a67 - b2 ;
kqd.a78 = kqd.a78 - b2 ;
kqd.a81 = kqd.a81 - b2 ; 

a1 =  1.50366e-04;
a2 =  1.44269e-04;
b1 = -8.08072e-04;
b2 = -8.02084e-04;

kqtf.a12b1 = kqtf.a12b1 + a1 ;
kqtf.a23b1 = kqtf.a23b1 + a1 ;
kqtf.a34b1 = kqtf.a34b1 + a1 ;
kqtf.a45b1 = kqtf.a45b1 + a1 ;
kqtf.a56b1 = kqtf.a56b1 - a2 ;
kqtf.a67b1 = kqtf.a67b1 - a2 ;
kqtf.a78b1 = kqtf.a78b1 - a2 ;
kqtf.a81b1 = kqtf.a81b1 - a2*2 ;
kqtd.a12b1 = kqtd.a12b1 + b1 ;
kqtd.a23b1 = kqtd.a23b1 + b1 ;
kqtd.a34b1 = kqtd.a34b1 + b1 ;
kqtd.a45b1 = kqtd.a45b1 + b1 ;
kqtd.a56b1 = kqtd.a56b1 - b2 ;
kqtd.a67b1 = kqtd.a67b1 - b2 ;
kqtd.a78b1 = kqtd.a78b1 - b2 ;
kqtd.a81b1 = kqtd.a81b1 - b2 ; 

kqtf.a12b2 = kqtf.a12b2 + a1 ;
kqtf.a23b2 = kqtf.a23b2 + a1 ;
kqtf.a34b2 = kqtf.a34b2 + a1 ;
kqtf.a45b2 = kqtf.a45b2 + a1 ;
kqtf.a56b2 = kqtf.a56b2 - a2 ;
kqtf.a67b2 = kqtf.a67b2 - a2 ;
kqtf.a78b2 = kqtf.a78b2 - a2 ;
kqtf.a81b2 = kqtf.a81b2 - a2*2 ;
kqtd.a12b2 = kqtd.a12b2 + b1 ;
kqtd.a23b2 = kqtd.a23b2 + b1 ;
kqtd.a34b2 = kqtd.a34b2 + b1 ;
kqtd.a45b2 = kqtd.a45b2 + b1 ;
kqtd.a56b2 = kqtd.a56b2 - b2 ;
kqtd.a67b2 = kqtd.a67b2 - b2 ;
kqtd.a78b2 = kqtd.a78b2 - b2 ;
kqtd.a81b2 = kqtd.a81b2 - b2 ;

! Octupole knob

!ko= kmax_MO/Imax_MO * 40 / (450*3.33);
ko= 18.;

kof.a81b1 := ko;
kof.a12b1 := ko;
kof.a23b1 := ko;
kof.a34b1 := ko;
kof.a45b1 := ko;
kof.a56b1 := ko;
kof.a67b1 := ko;
kof.a78b1 := ko;
kod.a81b1 := ko;        
kod.a12b1 := ko;       
kod.a23b1 := ko;
kod.a34b1 := ko;
kod.a45b1 := ko;
kod.a56b1 := ko;     
kod.a67b1 := ko;        
kod.a78b1 := ko;
 
kof.a81b2 := ko;
kof.a12b2 := ko;
kof.a23b2 := ko;
kof.a34b2 := ko;
kof.a45b2 := ko;
kof.a56b2 := ko;
kof.a67b2 := ko;
kof.a78b2 := ko;
kod.a81b2 := ko;
kod.a12b2 := ko;
kod.a23b2 := ko;
kod.a34b2 := ko;
kod.a45b2 := ko;
kod.a56b2 := ko;
kod.a67b2 := ko;
kod.a78b2 := ko;

!twiss, sequence=lhcb1, file="twiss_f2002_phase_b1";
!twiss, sequence=lhcb2, file="twiss_f2002_phase_b2";

!stop;

select, flag=ptc_twiss, pattern=IP, column= name,s, betx,bety, mux, muy, dx, dy,x,y;

get_nf(seqname) : macro = {
  use, sequence=seqname;
  ptc_create_universe;
    ptc_create_layout, model=2, method=4, exact=true, time=true;
    select_ptc_normal, q1=0, q2=0;
    select_ptc_normal, anhx=1,0,0;
    select_ptc_normal, anhy=0,1,0;
    select_ptc_normal, gnfu=4,0,0;
    select_ptc_normal, gnfu=-4,0,0;
    ptc_normal, normal, no=4, icase=56;
  ! ptc_twiss,  normal, no=4, icase=56;
  ptc_end;
}

get_val(_rrr) : macro = {
  option, -echo;
  q1_rrr     = table(normal_results, value, 1);
  q2_rrr     = table(normal_results, value, 2);
  q1j1_rrr   = table(normal_results, value, 3) * 2;
  q2j2_rrr   = table(normal_results, value, 4) * 2;
  f4000r_rrr = table(normal_results, value, 5) / 24;
  f4000i_rrr = table(normal_results, value, 6) / 24;
  f2002r_rrr = table(normal_results, value, 17) / 4;
  f2002i_rrr = table(normal_results, value, 18) / 4;
  f0040r_rrr = table(normal_results, value, 23) / 24;
  f0040i_rrr = table(normal_results, value, 24) / 24;
  option, echo;
}

get_twval(_rrr) : macro = {
  option, -echo;
  q1_rrr     = table(nonlin, Q1, value);
  q2_rrr     = table(nonlin, Q2, value);
  q1j1_rrr   = table(nonlin, Q1_JX, value) * 2;
  q2j2_rrr   = table(nonlin, Q2_JY, value) * 2;
  f4000r_rrr = table(nonlin, GNFC_4_0_0_0_0_0, value);
  f4000i_rrr = table(nonlin, GNFS_4_0_0_0_0_0, value);
  f2002r_rrr = table(nonlin, GNFC_2_0_0_2_0_0, value);
  f2002i_rrr = table(nonlin, GNFS_2_0_0_2_0_0, value);
  f0040r_rrr = table(nonlin, GNFC_0_0_4_0_0_0, value);
  f0040i_rrr = table(nonlin, GNFS_0_0_4_0_0_0, value);
  option, echo;
}

prt_val(_rrr) : macro = {
  option, -echo;
  print , text="PTC_NORMAL";
  printf, text="q1_rrr     = % -.6e", value=q1_rrr;
  printf, text="q2_rrr     = % -.6e", value=q2_rrr;
  printf, text="q1j1_rrr   = % -.6e", value=q1j1_rrr;
  printf, text="q2j2_rrr   = % -.6e", value=q2j2_rrr;
  printf, text="f2002r_rrr = % -.6e", value=f2002r_rrr;
  printf, text="f2002i_rrr = % -.6e", value=f2002i_rrr;
  printf, text="f4000r_rrr = % -.6e", value=f4000r_rrr;
  printf, text="f4000i_rrr = % -.6e", value=f4000i_rrr;
  printf, text="f0040r_rrr = % -.6e", value=f0040r_rrr;
  printf, text="f0040i_rrr = % -.6e", value=f0040i_rrr;
  option, echo;
}

exec, get_nf(lhcb1);
exec, get_val(_ref);
exec, prt_val(_ref);

/*
PTC_NORMAL
q1_ref     =  2.750490e-01
q2_ref     =  2.951279e-01
q1j1_ref   =  3.048599e+05
q2j2_ref   =  2.980282e+05
f2002r_ref = -8.811982e+04
f2002i_ref =  4.849994e+04
f4000r_ref =  5.216322e+01
f4000i_ref = -2.507563e+03
f0040r_ref =  1.248488e+04
f0040i_ref = -5.952942e+03
*/

n=1;
match, use_macro;
  vary, name=kqtf.a12b1;
  vary, name=kqtf.a23b1;
  vary, name=kqtf.a34b1;
  vary, name=kqtf.a45b1;
  vary, name=kqtf.a56b1;
  vary, name=kqtf.a67b1;
  vary, name=kqtf.a78b1;
  vary, name=kqtf.a81b1;
  vary, name=kqtd.a12b1;
  vary, name=kqtd.a23b1;
  vary, name=kqtd.a34b1;
  vary, name=kqtd.a45b1;
  vary, name=kqtd.a56b1;
  vary, name=kqtd.a67b1;
  vary, name=kqtd.a78b1;
  vary, name=kqtd.a81b1;
  vary, name=kof.a12b1 ;
  vary, name=kof.a23b1 ;
  vary, name=kof.a34b1 ;
  vary, name=kof.a45b1 ;
  vary, name=kof.a56b1 ;
  vary, name=kof.a67b1 ;
  vary, name=kof.a78b1 ;
  vary, name=kof.a81b1 ;
  vary, name=kod.a12b1 ;
  vary, name=kod.a23b1 ;
  vary, name=kod.a34b1 ;
  vary, name=kod.a45b1 ;
  vary, name=kod.a56b1 ;
  vary, name=kod.a67b1 ;
  vary, name=kod.a78b1 ;
  vary, name=kod.a81b1 ;
  macro1 : macro = {
    printf, text="**** ITERATION #%g ****", value=n;
    n = n+1;
    exec, get_nf(lhcb1);
    exec, get_val(_cur);
    exec, prt_val(_cur);
  }
  constraint, expr= q1_cur = q1_ref;
  constraint, expr= q2_cur = q2_ref;
  constraint, expr= q1j1_cur = q1j1_ref;
  constraint, expr= q2j2_cur = q2j2_ref;
  constraint, expr= f2002r_cur = 1.e-3;
  constraint, expr= f2002i_cur = 1.e-3;
  constraint, expr= f4000r_cur = 1.e-3;
  constraint, expr= f4000i_cur = 1.e-3;
  constraint, expr= f0040r_cur = 1.e-3;
  constraint, expr= f0040i_cur = 1.e-3;
  jacobian, calls=500, tolerance=1e-10;
endmatch;

stop;

!kqtf.a12b1 =  1.8475964748136660e-03;
!kqtf.a23b1 = -6.6746106330028428e-05;
!kqtf.a34b1 = -8.2962380212616641e-04;
!kqtf.a45b1 = -1.2705509191234679e-03;
!kqtf.a56b1 = -4.5717164771632505e-04;
!kqtf.a67b1 =  7.4123885099377726e-04;
!kqtf.a78b1 = -5.2984190642260773e-04;
!kqtf.a81b1 = -1.1090458553299919e-03;
!kqtd.a12b1 = -4.9498975510774785e-04;
!kqtd.a23b1 =  5.5543137667949175e-04;
!kqtd.a34b1 = -9.7819016510107960e-04;
!kqtd.a45b1 = -1.1294696394502598e-03;
!kqtd.a56b1 =  2.2146219853635199e-03;
!kqtd.a67b1 =  1.4015018884123854e-03;
!kqtd.a78b1 = -1.2368853947338154e-03;
!kqtd.a81b1 =  4.9270634843699191e-04;
!kof.a12b1  =  1.7999979668256309e+01;
!kof.a23b1  =  1.7999967478464381e+01;
!kof.a34b1  =  1.7999979835812240e+01;
!kof.a45b1  =  1.7999966738721245e+01;
!kof.a56b1  =  1.7999979670788147e+01;
!kof.a67b1  =  1.7999966755898797e+01;
!kof.a78b1  =  1.7999979505838926e+01;
!kof.a81b1  =  1.7999967180633373e+01;
!kod.a12b1  =  1.7999999145343899e+01;
!kod.a23b1  =  1.7999999454752846e+01;
!kod.a34b1  =  1.7999998932083400e+01;
!kod.a45b1  =  1.7999999338361839e+01;
!kod.a56b1  =  1.7999999173434428e+01;
!kod.a67b1  =  1.7999999544929221e+01;
!kod.a78b1  =  1.7999999150496251e+01;
!kod.a81b1  =  1.7999999530471062e+01;


kqtf.a12b2 =  4.1362471728984196e-03;
kqtf.a23b2 = -1.3692918604206329e-03;
kqtf.a34b2 = -3.6852784445332038e-03;
kqtf.a45b2 = -2.5405475997734924e-03;
kqtf.a56b2 =  3.2022915039154848e-03;
kqtf.a67b2 = -7.8292410961495812e-04;
kqtf.a78b2 = -2.9907379766850963e-03;
kqtf.a81b2 =  2.9832821637438213e-03;
kqtd.a12b2 =  2.6180817292850750e-03;
kqtd.a23b2 = -2.1784451787869542e-03;
kqtd.a34b2 = -1.8313744321669506e-03;
kqtd.a45b2 = -2.7361640322949008e-03;
kqtd.a56b2 =  4.6236843489706953e-04;
kqtd.a67b2 =  3.5866454080238312e-03;
kqtd.a78b2 = -8.0264557210441001e-04;
kqtd.a81b2 =  1.5862207594527981e-03;
 kof.a12b2 =  1.7999811200387995e+01;
 kof.a23b2 =  1.7999885957725564e+01;
 kof.a34b2 =  1.7999813987238362e+01;
 kof.a45b2 =  1.7999882995830038e+01;
 kof.a56b2 =  1.7999810578369175e+01;
 kof.a67b2 =  1.7999883226843480e+01;
 kof.a78b2 =  1.7999811593908941e+01;
 kof.a81b2 =  1.7999884459952323e+01;
 kod.a12b2 =  1.7999988954631831e+01;
 kod.a23b2 =  1.7999981733490788e+01;
 kod.a34b2 =  1.7999989185370548e+01;
 kod.a45b2 =  1.7999981221299592e+01;
 kod.a56b2 =  1.7999988556510868e+01;
 kod.a67b2 =  1.7999982750749901e+01;
 kod.a78b2 =  1.7999989209467181e+01;
 kod.a81b2 =  1.7999982426968760e+01;

