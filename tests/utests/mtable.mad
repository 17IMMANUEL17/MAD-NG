--[=[
 o-----------------------------------------------------------------------------o
 |
 | MTable tests
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the mtable module.

 o-----------------------------------------------------------------------------o
]=]

-- locals ---------------------------------------------------------------------o

local assertFalse, assertNil, assertNotNil, assertEquals, assertStrContains,
      assertErrorMsgContains      in MAD.utest

local mtable in MAD

-- helpers --------------------------------------------------------------------o

local mth = \f,s,... s[f](s,...)

-- regression test suite ------------------------------------------------------o

TestMTable = {}

local function checktbl(tbl, n)
  assertEquals(#tbl, n)
  for i=1,n do
    local x = tbl.x[i]
    assertEquals(tbl.x[i],   x)
    assertEquals(tbl.y[i], 2*x)
    assertEquals(tbl.z[i], 3*x)
    assertEquals(tbl[i].name, 'name'..x)
  end
  tbl:check_index()
end

local function newtbl(n)
  local t = mtable { {'name'}, 'x', 'y', 'z' }
  for i=1,n do
    t = t + { 'name'..i, i, 2*i, 3*i }
  end
  return t
end

function TestMTable:testCtor0()
  local t = newtbl(0)
  -- print() t:write()
  checktbl(t, 0)
end

function TestMTable:testCtor1()
  local t = newtbl(1)
  -- print() t:write()
  checktbl(t, 1)
end

function TestMTable:testCtorN()
  local t = newtbl(10)
  -- print() t:write()
  checktbl(t, 10)
end

function TestMTable:testAddRow0()
  local t = newtbl(0)
  t:addrow{'name0',0,0,0}
  -- print() t:write()
  checktbl(t, 1)
end

function TestMTable:testAddRow1()
  local t = newtbl(1)
  t:addrow{'name1',1,2,3}
  -- print() t:write()
  checktbl(t, 2)
end

function TestMTable:testAddRowN()
  local t = newtbl(10)
  t:addrow{'name11',11,22,33}
  -- print() t:write()
  checktbl(t, 11)
end

function TestMTable:testInsRow1()
  local t = newtbl(1)
  t:insrow('name1', {'name0',0,0,0})
  -- print() t:write()
  checktbl(t, 2)
end

function TestMTable:testInsRowN()
  local t = newtbl(10)
  t:insrow('name1' , {'name0'  ,   0,  0,    0})
  t:insrow('name3' , {'name2.5', 2.5,  5,  7.5})
  t:insrow('name10', {'name9.5', 9.5, 19, 28.5})
  -- print() t:write()
  checktbl(t, 13)
end

function TestMTable:testRemRow1()
  local t = newtbl(1)
  t:remrow'name1'
  -- print() t:write()
  checktbl(t, 0)
end

function TestMTable:testRemRowN()
  local t = newtbl(10)
  t:remrow'name1'
  t:remrow'name5'
  t:remrow'name10'
  -- print() t:write()
  checktbl(t, 7)
end

function TestMTable:testRemoveRow0()
  local t = newtbl(0)
  local sel = {name1=1}
  t:remove { select=\r -> sel[r.name] }
  -- print() t:write()
  checktbl(t, 0)
end

function TestMTable:testRemoveRow1()
  local t = newtbl(1)
  local sel = {name1=1}
  t:remove { select=\r -> sel[r.name] }
  -- print() t:write()
  checktbl(t, 0)
end

function TestMTable:testRemoveRowN()
  local t = newtbl(10)
  local sel = {name1=1, name2=1, name5=1, name6=1, name7=1, name9=1,name10=1}
  t:remove { select=\r -> sel[r.name] }
  -- print() t:write()
  checktbl(t, 3)
end

function TestMTable:testRemoveRow1st()
  local t = newtbl(10)
  local sel = {name1=1}
  t:remove { select=\r -> sel[r.name] }
  -- print() t:write()
  checktbl(t, 9)
end

function TestMTable:testRemoveRowNth()
  local t = newtbl(10)
  local sel = {name10=1}
  t:remove { select=\r -> sel[r.name] }
  -- print() t:write()
  checktbl(t, 9)
end

-- end ------------------------------------------------------------------------o
