-- ../mad lhc_job_dario.mad
-- time ../mad -Omaxtrace=8000,maxrecord=16000,loopunroll=4,sizemcode=64,maxmcode=65536 lhc_job_dario.mad
-- time ../mad -jp=vl -Omaxtrace=8000,maxrecord=16000,loopunroll=7,sizemcode=64,maxmcode=65536 lhc_job_dario.mad

local trkhdr = {'title', 'type', 'origin', 'date', 'time', 'refcol'}
local trkcol = {'name','kind','s','l',
                'C10','C20','C30','C40','C50','C60',
                'C11','C12','C13','C14','C15','C16',
                'C21','C22','C23','C24','C25','C26',
                'C31','C32','C33','C34','C35','C36',
                'C41','C42','C43','C44','C45','C46',
                'C51','C52','C53','C54','C55','C56',
                'C61','C62','C63','C64','C65','C66'}

local function LHC_load ()
  local is_sequence in MAD.typeid

  if not is_sequence(MADX:var_raw'lhcb1') then -- avoid MAD-X warning
    MADX:load('lhc_as-built.seq'    , 'lhc_as-built.mad') -- convert on need
    MADX:load('opticsfile.22_ctpps2', 'opticsfile.22_ctpps2.mad')
    MADX:load('lhc_unset.mad') -- handmade, must be updated if conversions occur

    local lhcb1, lhcb2 in MADX
    assert(#lhcb1 == 6694, "invalid number of elements in LHCB1 (6694 expected)")
    assert(#lhcb2 == 6721, "invalid number of elements in LHCB2 (6721 expected)")
  end

  return MADX.lhcb1, MADX.lhcb2
end

local function LHC_track (nturn)
  local lhcb1, nrj in MADX
  local beam, track, option in MAD

  local X0 = {-5.5000135896608228e-04, -2.9127177851308002e-10, -4.2912362530588000e-10, 1.5999978406657000e-04, 1.1994916646163034e-05, 0}
  local beam0 = beam { particle='proton',  energy=nrj }
  local tbl, mfw = track {sequence=lhcb1, beam=beam0, !range="$start/MQXB.A2R1",
                          method=4, X0=X0, nturn=nturn, !observe=false,
                          !mapdef=true, mapsave=true, !mapdump=2
                         }
  -- comment loops if mapdef=false
!  for i=1,6 do
!    tbl:addcol('C'..i..'0', \r -> tbl.M[r][i]:get(1))
!    for j=1,6 do
!      tbl:addcol('C'..i..j, \r -> tbl.M[r][i]:get(j+1))
!    end
!  end

  option.format = "% -.16e"
  tbl:write('Cmad_tk_dario.txt')!, trkcol, trkhdr)
end

local function LHC_twiss ()
  local lhcb1, nrj  in MADX
  local beam, twiss, option, gphys in MAD

  gphys.var.nrm_tol = 5e-9 -- relax normal form checks for large machine

  local beam0 = beam { particle='proton', energy=nrj }
  local tbl, mfw = twiss { sequence=lhcb1, beam=beam0, mapsave=true, method=4,
                           model='TKT', chrom=true }

  tbl:write('Cmad_tw.txt')

  for i=1,6 do
    tbl:addcol('C'..i..'0', \r -> tbl.M[r][i]:get(1))
    for j=1,6 do
      tbl:addcol('C'..i..j, \r -> tbl.M[r][i]:get(j+1))
    end
  end

  option.format = "%-.16e"
  tbl:write('Cmad_tw_dario.txt', trkcol)

  print('q1=' , tbl. q1[1])
  print('q2=' , tbl. q2[1])
  print('dq1=', tbl.dq1[1])
  print('dq2=', tbl.dq2[1])

  MAD.plot {
      sequence = lhcb1,
--      laypos   = "in",
--      layonly  = false,
--      title    = "Layout in plot with \u{03b2}_x",
      table    = tbl,
--      data     = { x=bet11.x, z=bet11.z },
      x1y1     = { s = {'disp1','disp3'} },
      styles   = 'lines',
    --  prolog   = 'set xrange [] reverse',
      xlabel   = "s [m]",
      ylabel   = "dx, dy [m]",
--      legend   = { z = '\u{03b2}_x/'..scl },
      fontsize = 14,
    }
  MAD.utility.pause()
end

-- run script
LHC_load() jit.flush()
LHC_track(100)
!LHC_twiss()
