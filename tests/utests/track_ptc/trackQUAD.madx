! cd track_ref ; ../madx64 trackQUAD.madx > trackQUAD.out 2>&1 ; cat trackQUAD.out ; cd -
! cd track_ref ; ../madx64 trackQUAD.madx  | grep -A 1 'model=' ; cd -

option, -info, -echo, -rbarc ;

beam ; ! positron 1Gev

k1f =  0.2110222185 ;
k1d = -0.2110222186 ;
value, k1f, k1d ;

! SEQUENCE WITH QUADS
seq: sequence, l=10, refer=entry ;
m1: quadrupole, at=0, l=1.5, k1:=k1f ;
m2: quadrupole, at=5, l=1.5, k1:=k1d ;
endsequence ;

set, format="-.16e";

! MADX TRACK
use, sequence=seq ;
track, onepass, onetable, dump, file="trackQUADmadx." ;
start, x=4e-4, px=2e-4, y=3e-4, py=1e-4, t=2e-5, pt=1e-5;
observe, place=#s ;
observe, place=m1 ;
observe, place=m2 ;
observe, place=#e ;
run, turns=1 ;
endtrack ;

printf, text="model=madx", value={} ;
system, "tail -n 1 trackQUADmadx.one" ;

! PTC TRACK
model=1;
while (model <= 2) {
  if (model == 2) { nst = 1; } else { nst = 3; }

  method=2;
  while (method <= 6) {
    use, sequence=seq ;
    ptc_create_universe;
    ptc_create_layout, model=model, method=method, nst=nst, time=true, exact=true;
    ptc_start, x=4e-4, px=2e-4, y=3e-4, py=1e-4, t=2e-5, pt=1e-5;
    ptc_observe, place=#s ;
    ptc_observe, place=m1 ;
    ptc_observe, place=m2 ;
    ptc_observe, place=#e ;
    ptc_track, icase=56, closed_orbit=false, dump, onetable, element_by_element, file="trackQUADptc." ;
    ptc_track_end;
    ptc_end;

    printf, text="model=%g, method=%g, nst=%g", value={model, method, nst} ;
    system, "tail -n 1 trackQUADptc.one" ;

    method = method + 2 ;
  }
  model = model + 1 ;
}

stop;