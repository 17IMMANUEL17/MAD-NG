--[=[
 o-----------------------------------------------------------------------------o
 |
 | Track tests
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: I. Tecker, irina.tecker at cern.ch
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the track module.

 o-----------------------------------------------------------------------------o
]=]

--[[
chg  = particle charge
dir  = sequence direction (e.g. lhcb2, dir=-1)
sdir = tracking s-direction
tdir = tracking t-direction (=dir*sdir)
bdir = tracking b-direction (=dir*sdir*chg)

      dir   sdir  chg  |  tdir  bdir
FODO   1     1     1   |   1     1
FODO  -1     1     1   |  -1    -1
ODOF   1    -1     1   |  -1    -1
ODOF  -1    -1     1   |   1     1

DOFO   1     1    -1   |   1    -1
DOFO  -1     1    -1   |  -1     1
OFOD   1    -1    -1   |  -1     1
OFOD  -1    -1    -1   |   1    -1

Usage of directions:
  - lengths        are multiplied by sdir
  - bending angles are multiplied by tdir
  - strengths      are multiplied by bdir
--]]

-- locals ---------------------------------------------------------------------o

local assertTrue, assertEquals, assertAllAlmostEquals           in MAD.utest
local printf, openfile, collectlocal                            in MAD.utility
local is_number                                                 in MAD.typeid
local eps, pi                                                   in MAD.constant

local track, beam, element, sequence, option, filesys           in MAD
local fnone, ftrue                                              in MAD.gfunc

local marker, drift, sbend, rbend, quadrupole, multipole        in element
local observe                                                   in element.flags

local refdir = \s -> 'track_ref/'..(s or '')
local rundir = \s -> 'track_run/'..(s or '')

local tenv = setmetatable(collectlocal(),{__index=_G}) -- ; show(tenv)

filesys.mkdir(rundir()) -- create xxx_run

-- helpers --------------------------------------------------------------------o

local doplot = false

if doplot then
  MAD.atexit(MAD.utility.pause, true)
end

local function plot (mtbl)
  if not doplot then return end
  MAD.plot { table=mtbl, title=mtbl.title,
             x1y1 = { s={'x','px','y','py','t','pt'} } }
end

local function plotxy (mtbl)
  if not doplot then return end
  MAD.plot { table=mtbl, title=mtbl.title, x1y1 = { x='x', y='y'} }
end

-- local -------------------------o

local tbl_col = {'name','s','x','px','y','py','t','pt'}
local tbl_hdr = {'title','type','origin','date','time'}

local slc_p1  = {1}
local slc_p2  = {0.5, 0.5}
local slc_p10 = {0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1}

-- sequences ---------------------o

local function mkDRIFT (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    drift  'd1' {at=0, l=5},
    marker 'm1' {at=5},
    drift  'd2' {at=5, l=5},
  }
  return seq   -- seq:dumpseq()
end

local function mkMULT (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local chg = chg_ or 1 -- particle charge
  local k0f =  2*pi/1e2/1.5*dir*chg
  local k0d = -2*pi/1e2/1.5*dir*chg
  local k1f =  0.2110222185*dir*chg
  local k1d = -0.2110222186*dir*chg
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    multipole 'm1' {at=0.75, l=1.5, knl={k0f*1.5,k1f*1.5}},
    drift     'd1' {at=1.5 , l=3.5},
    multipole 'm2' {at=5.75, l=1.5, knl={k0d*1.5,k1d*1.5}},
    drift     'd2' {at=6.5 , l=3.5},
  }
  return seq   -- seq:dumpseq()
end

local function mkQUAD (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local chg = chg_ or 1 -- particle charge
  local k1f =  0.2110222185*dir*chg
  local k1d = -0.2110222186*dir*chg
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    quadrupole 'm1' {at=0  , l=1.5, k1=k1f},
    drift      'd1' {at=1.5, l=3.5},
    quadrupole 'm2' {at=5  , l=1.5, k1=k1d},
    drift      'd2' {at=6.5, l=3.5},
  }
  return seq   -- seq:dumpseq()
end

local function mkRBEND (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local chg = chg_ or 1 -- particle charge
  local k0f =  2*pi/1e2/1.5*dir*chg
  local k0d = -2*pi/1e2/1.5*dir*chg
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    rbend 'm1' {at=0  , l=1.5, k0=k0f, angle=k0f*chg*1.5},
    drift 'd1' {at=1.5, l=3.5},
    rbend 'm2' {at=5  , l=1.5, k0=k0d, angle=k0d*chg*1.5},
    drift 'd2' {at=6.5, l=3.5},
  }
  return seq   -- seq:dumpseq()
end

local function mkSBEND (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local chg = chg_ or 1 -- particle charge
  local k0f =  2*pi/1e2/1.5*dir*chg
  local k0d = -2*pi/1e2/1.5*dir*chg
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    sbend 'm1' {at=0  , l=1.5, k0=k0f, angle=k0f*chg*1.5},
    drift 'd1' {at=1.5, l=3.5},
    sbend 'm2' {at=5  , l=1.5, k0=k0d, angle=k0d*chg*1.5},
    drift 'd2' {at=6.5, l=3.5},
  }
  return seq   -- seq:dumpseq()
end

-- DRIFT Testsuite -------------------------------------------------------------o

local DRIFT = {
-- contraints
  eps_b = 5, -- backtrack
  eps_t = 5, -- tpsa

-- initial conditions
  x0  = {0, 1e-6, 0, 5e-7, 0, 0},
--x0  = {x=4e-6, px=1e-7, y=3e-6, py=2e-7, t=2e-7, pt=1e-7},

-- MAD-X track (final)
  mdx = {1.460761371e-05    , 2.360452481e-06    , 1.797764445e-06    , -3.929287342e-07    , -1.454192453e-11    , 0},

-- DKD MAD, 10 slices
  x2  = {1.4600656220217e-05, 2.3588119782185e-06, 1.7943847978254e-06, -3.9372067136230e-07, -1.4531875702772e-11, 0}, -- o=2
  xt  = {1.4606200539093e-05, 2.3602690620606e-06, 1.7977500040831e-06, -3.9282268749294e-07, -1.4538426018618e-11, 0}, -- teapot
  x4  = {1.4607603046229e-05, 2.3604497079904e-06, 1.7977728935816e-06, -3.9292618283356e-07, -1.4541645665389e-11, 0}, -- o=4
  x6  = {1.4607613705636e-05, 2.3604524793350e-06, 1.7977644418495e-06, -3.9292873471424e-07, -1.4541645665389e-11, 0}, -- o=6
  x8  = {1.4607613712814e-05, 2.3604524808132e-06, 1.7977644446180e-06, -3.9292873420957e-07, -1.4541812198843e-11, 0}, -- o=8

-- DKD PTC, 10 slices
  p2  = {1.4600656220217E-05, 2.3588119782185E-06, 1.7943847978254E-06, -3.9372067136230E-07, -1.4533263481554E-11, 0}, -- o=2
  p4  = {1.4607603046229E-05, 2.3604497079903E-06, 1.7977728935816E-06, -3.9292618283356E-07, -1.4543033444170E-11, 0}, -- o=4
  p6  = {1.4607613705636E-05, 2.3604524793350E-06, 1.7977644418495E-06, -3.9292873471424E-07, -1.4542589354960E-11, 0}, -- o=6
}

-- MULT Testsuite -------------------------------------------------------------o

local MULT = {
-- contraints
  eps_b = 5, -- backtrack
  eps_t = 5, -- tpsa

-- initial conditions
  x0  = {0, 1e-6, 0, 5e-7, 0, 0},
-- x0  = {x=4e-6, px=1e-7, y=3e-6, py=2e-7, t=2e-7, pt=1e-7},

-- MAD-X track (final)
  mdx = {},

-- DKD MAD, 10 slices (final)
  x2  = {9.1984463781625e-06,  8.3235741246724e-07, 5.0000000000027e-06, 5e-07, 0.00087778417279077, 0}, -- o=2
  xt  = {9.1986606700005e-06,  8.3236330659767e-07, 5.0000000000028e-06, 5e-07, 0.00087778415868867, 0}, -- teapot
  x4  = {7.6800464604013e-06,  5.1717743362473e-07, 5.0000000000022e-06, 5e-07, 0.00087776879524060, 0}, -- o=4
  x6  = {4.9671555304774e-06, -3.6496213212427e-08, 5.0000000000017e-06, 5e-07, 0.00087773919545320, 0}, -- o=6
  x8  = {7.1722244443713e-07, -8.6696141362557e-07, 5.0000000000021e-06, 5e-07, 0.00087768516807019, 0}, -- o=8

-- DKD PTC, 10 slices (final)
  p2  = {7.9306379482159E-06, 9.9999980807120E-07, 5.0000048362651E-06, 5E-07, -9.6725315339441E-06, 0}, -- o=2
  p4  = {9.9981725319316E-06, 1.0000000000149E-06, 4.9999998425082E-06, 5E-07,  3.1498365293814E-07, 0}, -- o=4
  p6  = {9.9980259575486E-06, 9.9999999998712E-07, 4.9999998429028E-06, 5E-07,  3.1419440826852E-07, 0}, -- o=6
}

-- QUAD Testsuite -------------------------------------------------------------o

local QUAD = {
-- contraints
  eps_b = 5, -- backtrack
  eps_t = 5, -- tpsa

-- initial conditions
  x0  = {0, 1e-6, 0, 5e-7, 0, 0},
--x0  = {x=4e-6, px=1e-7, y=3e-6, py=2e-7, t=2e-7, pt=1e-7},

-- MAD-X track (final)
  mdx = {1.460761371e-05    , 2.360452481e-06    , 1.797764445e-06    , -3.929287342e-07    , -1.454192453e-11    , 0},

-- DKD MAD, 10 slices (final)
  x2  = {1.4600656220217e-05, 2.3588119782185e-06, 1.7943847978254e-06, -3.9372067136230e-07, -1.4531875702772e-11, 0}, -- o=2
  xt  = {1.4606200539093e-05, 2.3602690620606e-06, 1.7977500040831e-06, -3.9282268749294e-07, -1.4538426018618e-11, 0}, -- teapot
  x4  = {1.4607603046229e-05, 2.3604497079904e-06, 1.7977728935816e-06, -3.9292618283356e-07, -1.4541645665389e-11, 0}, -- o=4
  x6  = {1.4607613705636e-05, 2.3604524793350e-06, 1.7977644418495e-06, -3.9292873471424e-07, -1.4541645665389e-11, 0}, -- o=6
  x8  = {1.4607613712814e-05, 2.3604524808132e-06, 1.7977644446180e-06, -3.9292873420957e-07, -1.4541812198843e-11, 0}, -- o=8

-- DKD PTC, 10 slices (final)
  p2  = {1.4600656220217E-05, 2.3588119782185E-06, 1.7943847978254E-06, -3.9372067136230E-07, -1.4533263481554E-11, 0}, -- o=2
  p4  = {1.4607603046229E-05, 2.3604497079903E-06, 1.7977728935816E-06, -3.9292618283356E-07, -1.4543033444170E-11, 0}, -- o=4
  p6  = {1.4607613705636E-05, 2.3604524793350E-06, 1.7977644418495E-06, -3.9292873471424E-07, -1.4542589354960E-11, 0}, -- o=6

-- TKT MAD, 1 slice (final)
  x2t = {1.4607613712814e-05, 2.3604524808134e-06, 1.7977644446181e-06, -3.9292873420967e-07, -1.4268142223273e-11, 0}, -- o=2
  xtt = {1.4607613712815e-05, 2.3604524808133e-06, 1.7977644446177e-06, -3.9292873420968e-07, -1.4631407196930e-11, 0}, -- teapot
  x4t = {1.4607613712814e-05, 2.3604524808133e-06, 1.7977644446178e-06, -3.9292873420967e-07, -1.4538148462861e-11, 0}, -- o=4
  x6t = {1.4607613712814e-05, 2.3604524808133e-06, 1.7977644446178e-06, -3.9292873420968e-07, -1.4541257087330e-11, 0}, -- o=6
  x8t = {1.4607613712814e-05, 2.3604524808133e-06, 1.7977644446178e-06, -3.9292873420968e-07, -1.4542589354960e-11, 0}, -- o=8

-- TKT PTC, 1 slice (final)
  p2t = {1.4607613712814E-05, 2.3604524808134E-06, 1.7977644446181E-06, -3.9292873420968E-07, -1.4269030401692E-11, 0}, -- o=2
  p4t = {1.4607613712814E-05, 2.3604524808133E-06, 1.7977644446178E-06, -3.9292873420969E-07, -1.4545697979429E-11, 0}, -- o=4
  p6t = {1.4607613712814E-05, 2.3604524808133E-06, 1.7977644446178E-06, -3.9292873420968E-07, -1.4542589354960E-11, 0}, -- o=6
}

-- SBEND Testsuite ------------------------------------------------------------o

local SBEND = {
-- constraints
  eps_b = 32, -- backtrack
  eps_t = 64, -- tpsa

-- initial conditions
  x0  = {0, 1e-6, 0, 5e-7, 0, 0},
--x0  = {x=4e-6, px=1e-7, y=3e-6, py=2e-7, t=2e-7, pt=1e-7},

-- MAD-X track (final)
  mdx = {9.91855681e-06, 9.829272954e-07, 5e-06, 5e-07, 3.133578921e-07, 2.220446049e-16},

-- DKD MAD, 10 slices (final)
  x2  = {7.8756914406047e-06, 9.8836091423030e-07, 5.0000048365745e-06, 5e-07, -9.6731502318148e-06, 0}, -- o=2
  xt  = {8.8869122693544e-06, 9.8567131529221e-07, 4.9999998724726e-06, 5e-07,  2.5505480993893e-07, 0}, -- teapot
  x4  = {9.9187011397760e-06, 9.8292691050501e-07, 4.9999998429265e-06, 5e-07,  3.1414709789068e-07, 0}, -- o=4
  x6  = {9.9185563041993e-06, 9.8292729571944e-07, 4.9999998433211e-06, 5e-07,  3.1335786881970e-07, 0}, -- o=6
  x8  = {9.9185563046384e-06, 9.8292729570210e-07, 4.9999998433211e-06, 5e-07,  3.1335787331610e-07, 0}, -- o=8

-- DKD PTC, 10 slices (final)
  p2  = {7.8756914406164E-06, 9.8836091423117E-07, 5.0000048365745E-06, 5E-07, -9.6731502332581E-06, 0}, -- o=2
  p4  = {9.9187011398589E-06, 9.8292691050328E-07, 4.9999998429265E-06, 5E-07,  3.1414709722455E-07, 0}, -- o=4
  p6  = {9.9185563040854E-06, 9.8292729571858E-07, 4.9999998433211E-06, 5E-07,  3.1335786854214E-07, 0}, -- o=6

-- TKT MAD, 1 slice (final)
  x2t = {9.9185563046240e-06, 9.8292729571807e-07, 4.9999998433211e-06, 5e-07, 3.1335787253894e-07, 0}, -- o=2
  xtt = {9.9185563046326e-06, 9.8292729572053e-07, 4.9999998433211e-06, 5e-07, 3.1335787209485e-07, 0}, -- teapot
  x4t = {9.9185563081537e-06, 9.8292729571148e-07, 4.9999998433211e-06, 5e-07, 3.1335787253894e-07, 0}, -- o=4
  x6t = {9.9185563045986e-06, 9.8292729571079e-07, 4.9999998433211e-06, 5e-07, 3.1335787165077e-07, 0}, -- o=6
  x8t = {9.9185563151951e-06, 9.8292729569319e-07, 4.9999998433211e-06, 5e-07, 3.1335787431530e-07, 0}, -- o=8

-- TKT PTC, 1 slice (final)
  p2t = {9.9185563046040E-06, 9.8292729571233E-07, 4.9999998433211E-06, 5E-07, 3.1335787120668E-07, 0}, -- o=2
  p4t = {9.9185562976379E-06, 9.8292729575214E-07, 4.9999998433211E-06, 5E-07, 3.1335787120668E-07, 0}, -- o=4
  p6t = {9.9185562940275E-06, 9.8292729573568E-07, 4.9999998433211E-06, 5E-07, 3.1335787165077E-07, 0}, -- o=6
}

-- RBEND Testsuite ------------------------------------------------------------o

local RBEND = {
-- constraints
  eps_b = 2, -- backtrack
  eps_t = 2, -- tpsa

-- initial conditions
  x0  = {0, 1e-6, 0, 5e-7, 0, 0},
--x0  = {x=4e-6, px=1e-7, y=3e-6, py=2e-7, t=2e-7, pt=1e-7},

-- MAD-X track (final)
  mdx = {},

-- DKD MAD, 10 slices (final)
  x2  = {9.1984463781625e-06,  8.3235741246724e-07, 5.0000000000027e-06, 5e-07, 0.00087778417279077, 0}, -- o=2
  xt  = {9.1986606700005e-06,  8.3236330659767e-07, 5.0000000000028e-06, 5e-07, 0.00087778415868867, 0}, -- teapot
  x4  = {7.6800464604013e-06,  5.1717743362473e-07, 5.0000000000022e-06, 5e-07, 0.00087776879524060, 0}, -- o=4
  x6  = {4.9671555304774e-06, -3.6496213212427e-08, 5.0000000000017e-06, 5e-07, 0.00087773919545320, 0}, -- o=6
  x8  = {7.1722244443713e-07, -8.6696141362557e-07, 5.0000000000021e-06, 5e-07, 0.00087768516807019, 0}, -- o=8

-- DKD PTC, 10 slices (final)
  p2  = {7.9306379482159E-06, 9.9999980807120E-07, 5.0000048362651E-06, 5E-07, -9.6725315339441E-06, 0}, -- o=2
  p4  = {9.9981725319316E-06, 1.0000000000149E-06, 4.9999998425082E-06, 5E-07,  3.1498365293814E-07, 0}, -- o=4
  p6  = {9.9980259575486E-06, 9.9999999998712E-07, 4.9999998429028E-06, 5E-07,  3.1419440826852E-07, 0}, -- o=6

-- TKT MAD, 1 slice (final)
  x2t = {-0.47301905761235, 1.0000000000010e-06, 5.010053825066e-06, 5e-07, -0.019230174855075, 0}, -- o=2
  xtt = {-0.47301905761235, 1.0000000000079e-06, 5.010053825066e-06, 5e-07, -0.019230174855074, 0}, -- teapot
  x4t = {-0.47301905761235, 1.0000000000010e-06, 5.010053825066e-06, 5e-07, -0.019230174855076, 0}, -- o=4
  x6t = {-0.47301905761235, 1.0000000000079e-06, 5.010053825066e-06, 5e-07, -0.019230174855074, 0}, -- o=6
  x8t = {-0.47301905761235, 9.9999999999406e-07, 5.010053825066e-06, 5e-07, -0.019230174855075, 0}, -- o=8

-- TKT PTC, 1 slice (final)
  p2t = {9.9980259634782E-06, 9.9999999998018E-07, 4.9999998429028E-06, 5E-07, 3.1419441137714E-07, 0}, -- o=2
  p4t = {9.9980259528929E-06, 1.0000000000010E-06, 4.9999998429028E-06, 5E-07, 3.1419441137714E-07, 0}, -- o=4
  p6t = {9.9980259492673E-06, 9.9999999998018E-07, 4.9999998429028E-06, 5E-07, 3.1419441137714E-07, 0}, -- o=6
}

-- Generate All Testsuites ----------------------------------------------------o

local doprt = false
local t = 'teapot'

collectlocal(1, tenv) -- collect locals

local TODO    = {DRIFT=true, MULT=true, RBEND=true}
local has_TKT = {QUAD=true, SBEND=true, RBEND=true}

for _,e in ipairs{'DRIFT','MULT','QUAD','SBEND','RBEND'} do

if not TODO[e] then -- prevent to run tests not yet finalized

  -- prelude
  local s = [[
  _G['TestTrack${e}'] = {}

  function TestTrack${e}:setUp ()
    self.optfmt, option.format = option.format, "%-.16e"
  end

  function TestTrack${e}:tearDown ()
    option.format = self.optfmt
  end
  ]] % { e=e }

  local f = assert(loadstring(s)) ; setfenv(f, tenv) ; f()

for _,d in ipairs{0, 2} do            -- mapdef
for _,o in ipairs{2,'t',4,6,8} do     -- orders
for _,m in ipairs{'DKD', 'TKT'} do    -- models

-- discard identical combination
if m == 'DKD' or m == 'TKT' and has_TKT[e] then

for _,k in ipairs{'',                 -- simple
                  'B', 'R', 'N', 'P', -- backward, reverse, negative, position
                  'BR', 'BN', 'BP', 'RN', 'RP', 'NP',
                  'BRN', 'BRP', 'BNP', 'RNP', 'BRNP'} do

-- discard invalid combination (e.g. teapot and slices position)
if not (o == 't' and string.find(k,'P',1,true)) then

  -- test
  local s = [[
  function TestTrack${e}:test${m}${n}D${d}M${o}${k} ()
    local seq  = mk${e}(${r},${s})
    local beam = beam { particle = ${s}>0 and 'positron' or 'electron' }
    local X0   = ${b}>0 and ${e}.x0 or ${e}.x${o}${t}
    local mtbl = track {sequence=seq, beam=beam, X0=X0, observe=0, dir=${b},
                        mapdef=${a}, model='${m}', method=${o}, nslice=${p}${n}}

    mtbl:write(rundir('${e}_${m}${n}M${o}${k}'), tbl_col, tbl_hdr)

    local row = mtbl[#mtbl]
    local res = {row.x, row.px, row.y, row.py, row.t, row.pt}
    local ref = ${b}<0 and ${e}.x0 or ${e}.x${o}${t}

    if doprt then print(res[1],res[2],res[3],res[4],res[5],res[6]) end
    assertAllAlmostEquals(res, ref, ${c}*eps)
  end
  ]] % { e=e, d=d, o=o, m=m, k=k,
         n=({DKD=10, TKT=1  })[m],
         t=({DKD='', TKT='t'})[m],
         a=({[0]=false, [2]=true})[d],
         b = string.find(k,'B',1,true) and -1 or 1,        -- track dir
         r = string.find(k,'R',1,true) and -1 or 1,        -- sequ  dir
         s = string.find(k,'N',1,true) and -1 or 1,        -- charge sign
         p = string.find(k,'P',1,true) and 'slc_p' or '',  -- position
         c = d > 0 and e..'.eps_t' or                      -- eps_{t,b}
             string.find(k,'B',1,true) and e..'.eps_b' or 1,
        }

  local f = assert(loadstring(s)) ; setfenv(f, tenv) ; f()

end -- if
end -- for
end -- if
end end end -- for
end -- if
end -- for

-- end ------------------------------------------------------------------------o
