--[=[
 o-----------------------------------------------------------------------------o
 |
 | Track tests
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: I. Tecker, irina.tecker at cern.ch
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the track module.

 o-----------------------------------------------------------------------------o
]=]

--[[
chg  = particle charge
dir  = sequence direction (e.g. lhcb2, dir=-1)
sdir = tracking s-direction
tdir = tracking t-direction (=dir*sdir)
bdir = tracking b-direction (=dir*sdir*chg)

      dir   sdir  chg  |  tdir  bdir
FODO   1     1     1   |   1     1
FODO  -1     1     1   |  -1    -1
ODOF   1    -1     1   |  -1    -1
ODOF  -1    -1     1   |   1     1

DOFO   1     1    -1   |   1    -1
DOFO  -1     1    -1   |  -1     1
OFOD   1    -1    -1   |  -1     1
OFOD  -1    -1    -1   |   1    -1

Usage of directions:
  - lengths        are multiplied by sdir
  - bending angles are multiplied by tdir
  - strengths      are multiplied by bdir
--]]

-- locals ---------------------------------------------------------------------o

local assertTrue, assertEquals, assertAllAlmostEquals           in MAD.utest
local printf, openfile, collectlocal                            in MAD.utility
local is_number                                                 in MAD.typeid
local eps, pi                                                   in MAD.constant

local track, beam, element, sequence, option, filesys           in MAD
local fnone, ftrue                                              in MAD.gfunc

local marker, drift, sbend, rbend, quadrupole, multipole        in element
local observe                                                   in element.flags

local refdir = \s -> 'track_ref/'..(s or '')
local rundir = \s -> 'track_run/'..(s or '')

local tenv = setmetatable(collectlocal(),{__index=_G}) -- ; show(tenv)

filesys.mkdir(rundir()) -- create xxx_run

-- helpers --------------------------------------------------------------------o

local doplot = false

if doplot then
  MAD.atexit(MAD.utility.pause, true)
end

local function plot (mtbl)
  if not doplot then return end
  MAD.plot { table=mtbl, title=mtbl.title,
             x1y1 = { s={'x','px','y','py','t','pt'} } }
end

local function plotxy (mtbl)
  if not doplot then return end
  MAD.plot { table=mtbl, title=mtbl.title, x1y1 = { x='x', y='y'} }
end

-- local -------------------------o

local tbl_col = {'name','s','x','px','y','py','t','pt'}
local tbl_hdr = {'title','type','origin','date','time'}

local slc_p1  = {1}
local slc_p2  = {0.5, 0.5}
local slc_p10 = {0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1}

-- sequences ---------------------o

local function mkQUAD (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local chg = chg_ or 1 -- particle charge
  local k1f =  0.2110222185*dir*chg
  local k1d = -0.2110222186*dir*chg
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    quadrupole 'm1' {at=0  , l=1.5, k1:=k1f}, -- [1]=multipole{at=0.5}},
    drift      'd1' {at=1.5, l=3.5},
    quadrupole 'm2' {at=5  , l=1.5, k1:=k1d}, -- [1]=multipole{at=0.5}},
    drift      'd2' {at=6.5, l=3.5},
  }
  return seq   -- seq:dumpseq()
end

local function mkRBEND (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local chg = chg_ or 1 -- particle charge
  local k0f =  2*pi/1e2/1.5*dir*chg
  local k0d = -2*pi/1e2/1.5*dir*chg
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    rbend 'm1' {at=0  , l=1.5, k0:=k0f, angle:=k0f*1.5},
    drift 'd1' {at=1.5, l=3.5},
    rbend 'm2' {at=5  , l=1.5, k0:=k0d, angle:=k0d*1.5},
    drift 'd2' {at=6.5, l=3.5},
  }
  return seq   -- seq:dumpseq()
end

local function mkSBEND (dir_, chg_)
  local dir = dir_ or 1 -- sequence direction
  local chg = chg_ or 1 -- particle charge
  local k0f =  2*pi/1e2/1.5*dir*chg
  local k0d = -2*pi/1e2/1.5*dir*chg
  local seq = sequence 'seq' { l=10, refer='entry', dir=dir,
    sbend 'm1' {at=0  , l=1.5, k0:=k0f, angle:=k0f*1.5},
    drift 'd1' {at=1.5, l=3.5},
    sbend 'm2' {at=5  , l=1.5, k0:=k0d, angle:=k0d*1.5},
    drift 'd2' {at=6.5, l=3.5},
  }
  return seq   -- seq:dumpseq()
end

-- aliases

local mkQUADdp, mkRBENDdp, mkSBENDdp = mkQUAD, mkRBEND, mkSBEND

-- QUAD Testsuite -------------------------------------------------------------o

local QUAD_x0  = {0, 1e-6, 0, 5e-7, 0, 0}

-- track
local QUAD_mdx = {1.460761371e-05    , 2.360452481e-06    , 1.797764445e-06    , -3.929287342e-07    , -1.454192453e-11    , 0}

-- DKD MAD, 10 slices
local QUAD_x2  = {1.4600656220217e-05, 2.3588119782185e-06, 1.7943847978254e-06, -3.9372067136230e-07, -1.4531875702772e-11, 0} -- o=2
local QUAD_xt  = {1.4606200539093e-05, 2.3602690620606e-06, 1.7977500040831e-06, -3.9282268749294e-07, -1.4538426018618e-11, 0} -- teapot
local QUAD_x4  = {1.4607603046229e-05, 2.3604497079904e-06, 1.7977728935816e-06, -3.9292618283356e-07, -1.4541645665389e-11, 0} -- o=4
local QUAD_x6  = {1.4607613705636e-05, 2.3604524793350e-06, 1.7977644418495e-06, -3.9292873471424e-07, -1.4541645665389e-11, 0} -- o=6
local QUAD_x8  = {1.4607613712814e-05, 2.3604524808132e-06, 1.7977644446180e-06, -3.9292873420957e-07, -1.4541812198843e-11, 0} -- o=8

-- DKD PTC, 10 slices
local QUAD_p2  = {1.4600656220217E-05, 2.3588119782185E-06, 1.7943847978254E-06, -3.9372067136230E-07, -1.4533263481554E-11, 0} -- o=2
local QUAD_p4  = {1.4607603046229E-05, 2.3604497079903E-06, 1.7977728935816E-06, -3.9292618283356E-07, -1.4543033444170E-11, 0} -- o=4
local QUAD_p6  = {1.4607613705636E-05, 2.3604524793350E-06, 1.7977644418495E-06, -3.9292873471424E-07, -1.4542589354960E-11, 0} -- o=6

-- TKT MAD, 1 slice
local QUAD_x2t = {1.4607613712814e-05, 2.3604524808134e-06, 1.7977644446181e-06, -3.9292873420967e-07, -1.4268142223273e-11, 0} -- o=2
local QUAD_xtt = {1.4607613712815e-05, 2.3604524808133e-06, 1.7977644446177e-06, -3.9292873420968e-07, -1.4631407196930e-11, 0} -- teapot
local QUAD_x4t = {1.4607613712814e-05, 2.3604524808133e-06, 1.7977644446178e-06, -3.9292873420967e-07, -1.4538148462861e-11, 0} -- o=4
local QUAD_x6t = {1.4607613712814e-05, 2.3604524808133e-06, 1.7977644446178e-06, -3.9292873420968e-07, -1.4541257087330e-11, 0} -- o=6
local QUAD_x8t = {1.4607613712814e-05, 2.3604524808133e-06, 1.7977644446178e-06, -3.9292873420968e-07, -1.4542589354960e-11, 0} -- o=8

-- TKT PTC, 1 slice
local QUAD_p2t = {1.4607613712814E-05, 2.3604524808134E-06, 1.7977644446181E-06, -3.9292873420968E-07, -1.4269030401692E-11, 0} -- o=2
local QUAD_p4t = {1.4607613712814E-05, 2.3604524808133E-06, 1.7977644446178E-06, -3.9292873420969E-07, -1.4545697979429E-11, 0} -- o=4
local QUAD_p6t = {1.4607613712814E-05, 2.3604524808133E-06, 1.7977644446178E-06, -3.9292873420968E-07, -1.4542589354960E-11, 0} -- o=6

-- ptc_create_layout, model={1,2}, method={2,4,6}, nst={1,10}, time=true, exact=true;
-- ptc_track, icase={5,56}, closed_orbit=false, dump, onetable, element_by_element, file="ptctrack_quad_madx.";

-- QUADdp Testsuite (with dp) -------------------------------------------------o

-- TODO

-- QUADfr Testsuite (with fringe fields and dp) -------------------------------o

-- TODO

-- RBEND Testsuite ------------------------------------------------------------o

local RBEND_x0  = {0, 1e-6, 0, 5e-7, 0, 0}

-- track
local RBEND_mdx = {} -- not possible with MAD-X?

-- DKD MAD, 10 slices
local RBEND_x2  = {9.1984463781625e-06,  8.3235741246724e-07, 5.0000000000027e-06, 5e-07, 0.00087778417279077, 0} -- o=2
local RBEND_xt  = {9.1986606700005e-06,  8.3236330659767e-07, 5.0000000000028e-06, 5e-07, 0.00087778415868867, 0} -- teapot
local RBEND_x4  = {7.6800464604013e-06,  5.1717743362473e-07, 5.0000000000022e-06, 5e-07, 0.00087776879524060, 0} -- o=4
local RBEND_x6  = {4.9671555304774e-06, -3.6496213212427e-08, 5.0000000000017e-06, 5e-07, 0.00087773919545320, 0} -- o=6
local RBEND_x8  = {7.1722244443713e-07, -8.6696141362557e-07, 5.0000000000021e-06, 5e-07, 0.00087768516807019, 0} -- o=8

-- DKD PTC, 10 slices
local RBEND_p2  = {7.9306380254415E-06, 9.9999980793936E-07, 4.9602524314522E-06, 4.9146099469804E-07, -9.6725315228419E-06, 0} -- o=2
local RBEND_p4  = {9.9981726091555E-06, 9.9999999988304E-07, 4.9602478521420E-06, 4.9146106375814E-07,  3.1498366315219E-07, 0} -- o=4
local RBEND_p6  = {9.9980260348334E-06, 9.9999999986222E-07, 4.9602478525065E-06, 4.9146106375313E-07,  3.1419441892666E-07, 0} -- o=6

-- TKT MAD, 1 slice
local RBEND_x2t = {-0.47301905761235, 1.0000000000010e-06, 5.010053825066e-06, 5e-07, -0.019230174855075, 0}
local RBEND_xtt = {-0.47301905761235, 1.0000000000079e-06, 5.010053825066e-06, 5e-07, -0.019230174855074, 0}
local RBEND_x4t = {-0.47301905761235, 1.0000000000010e-06, 5.010053825066e-06, 5e-07, -0.019230174855076, 0}
local RBEND_x6t = {-0.47301905761235, 1.0000000000079e-06, 5.010053825066e-06, 5e-07, -0.019230174855074, 0}
local RBEND_x8t = {-0.47301905761235, 9.9999999999406e-07, 5.010053825066e-06, 5e-07, -0.019230174855075, 0}

-- TKT PTC, 1 slice
local RBEND_p2t = {9.9980260375006E-06, 9.9999999986222E-07, 4.9602478525065E-06, 4.9146106375313E-07, 3.1419442203529E-07, 0} -- o=2
local RBEND_p4t = {9.9980260305409E-06, 9.9999999990386E-07, 4.9602478525065E-06, 4.9146106375313E-07, 3.1419442203529E-07, 0} -- o=4
local RBEND_p6t = {9.9980260340451E-06, 9.9999999988998E-07, 4.9602478525065E-06, 4.9146106375313E-07, 3.1419442247938E-07, 0} -- o=6

-- RBENDdp Testsuite (with dp) ------------------------------------------------o

-- TODO

-- RBENDfr Testsuite (with fringe fields and dp) ------------------------------o

-- TODO

-- SBEND Testsuite ------------------------------------------------------------o

local SBEND_x0  = {0, 1e-6, 0, 5e-7, 0, 0}

-- track
local SBEND_mdx = {9.91855681e-06, 9.829272954e-07, 5e-06, 5e-07, 3.133578921e-07, 2.220446049e-16}

-- DKD MAD, 10 slices
local SBEND_x2  = { 7.8756914406047e-06,  9.8836091423030e-07, 5.0000048365745e-06, 5e-07, -9.6731502318148e-06, 0}
local SBEND_xt  = { 8.8869122693544e-06,  9.8567131529221e-07, 4.9999998724726e-06, 5e-07,  2.5505480993893e-07, 0}
local SBEND_x4  = { 9.9187011397760e-06,  9.8292691050501e-07, 4.9999998429265e-06, 5e-07,  3.1414709789068e-07, 0}
local SBEND_x6  = { 9.9185563041993e-06,  9.8292729571944e-07, 4.9999998433211e-06, 5e-07,  3.1335786881970e-07, 0}
local SBEND_x8  = { 9.9185563046384e-06,  9.8292729570210e-07, 4.9999998433211e-06, 5e-07,  3.1335787331610e-07, 0}

-- DKD PTC, 10 slices
local SBEND_p2  = {7.8756915207485E-06, 9.8836091460587E-07, 5.0000048280685E-06, 4.9999994507117E-07, -9.6731502421399E-06, 0} -- o=2
local SBEND_p4  = {9.9187012199853E-06, 9.8292691087624E-07, 5.0000001636836E-06, 5.0000000205961E-07,  3.1414708834276E-07, 0} -- o=4
local SBEND_p6  = {9.9185563842218E-06, 9.8292729609414E-07, 5.0000001640549E-06, 5.0000000205557E-07,  3.1335785921627E-07, 0} -- o=6

-- TKT MAD, 1 slice
local SBEND_x2t = {-0.41314461267492, 0.0018457536279864, 5.0166161377796e-06, 5e-07, -0.033232279897936,  0}
local SBEND_xtt = {-0.41518146630718, 0.0012900949586731, 5.0157641115697e-06, 5e-07, -0.031528227255699,  0}
local SBEND_x4t = {-0.38761788875350, 0.0080237951544151, 5.0159982513886e-06, 5e-07, -0.031996506954657,  0}
local SBEND_x6t = {-0.39009888601832, 0.0072024089257165, 5.0158856946613e-06, 5e-07, -0.031771393470612,  0}
local SBEND_x8t = {-0.30865014682837, 0.0279820403405710, 5.0173513493385e-06, 5e-07, -0.034702703207713,  0}

-- TKT PTC, 1 slice
local SBEND_p2t = {9.9185563850061E-06, 9.8292729608097E-07, 5.0000001640549E-06, 5.0000000205557E-07, 3.1335786232489E-07, 0} -- o=2
local SBEND_p4t = {9.9185563781091E-06, 9.8292729614050E-07, 5.0000001640549E-06, 5.0000000205557E-07, 3.1335786232489E-07, 0} -- o=4
local SBEND_p6t = {9.9185563708904E-06, 9.8292729610813E-07, 5.0000001640549E-06, 5.0000000205557E-07, 3.1335786232489E-07, 0} -- o=6

-- SBENDdp Testsuite (with dp) ------------------------------------------------o

-- TODO

-- SBENDfr Testsuite (with fringe fields and dp) ------------------------------o

-- TODO

-- Generate All Testsuites ----------------------------------------------------o

local doprt = false
local t = 'teapot'

collectlocal(1, tenv) -- collect locals

for _,e in ipairs{'QUAD','RBEND','SBEND'} do -- TODO: QUADdp, RBENDdp, SBENDdp

  -- prelude
  local s = [[
  _G['TestTrack${e}'] = {}

  function TestTrack${e}:setUp ()
    self.optfmt, option.format = option.format, "%-.16e"
  end

  function TestTrack${e}:tearDown ()
    option.format = self.optfmt
  end
  ]] % { e=e }

  local f = assert(loadstring(s)) ; setfenv(f, tenv) ; f()

for _,o in ipairs{2,'t',4,6,8} do   -- orders
for _,m in ipairs{'DKD', 'TKT'} do    -- models
for _,k in ipairs{'',                 -- simple
                  'B', 'R', 'N', 'P', -- backward, reverse, negative, position
                  'BR', 'BN', 'BP', 'RN', 'RP', 'NP',
                  'BRN', 'BRP', 'BNP', 'RNP', 'BRNP'} do

-- discard invalid combination
if not (o == 't' and string.find(k,'P',1,true)) then

  -- test
  local s = [[
  function TestTrack${e}:test${m}${n}M${o}${k} ()
    local seq  = mk${e}(${r},${s})
    local beam = beam { particle = ${s}>0 and 'positron' or 'electron' }
    local X0   = ${b}>0 and ${e}_x0 or ${e}_x${o}${t}
    local mtbl, mflw = track {sequence=seq, beam=beam, X0=X0, observe=0,
                       model='${m}', method=${o}, nslice=${p}${n}, dir=${b} }

    mtbl:write(rundir('${e}_${m}${n}M${o}${k}'), tbl_col, tbl_hdr)

    local row = mtbl[#mtbl]
    local res = {row.x, row.px, row.y, row.py, row.t, row.pt}
    local ref = ${b}<0 and ${e}_x0 or ${e}_x${o}${t}

    if doprt then print(res[1],res[2],res[3],res[4],res[5],res[6]) end
    assertAllAlmostEquals(res, ref, ${c}*eps)
  end
  ]] % { e=e, o=o, m=m, k=k,
         n=({DKD=10, TKT=1  })[m],
         t=({DKD='', TKT='t'})[m],
         c = string.find(k,'B',1,true) and  2 or 1,        -- eps
         b = string.find(k,'B',1,true) and -1 or 1,        -- track dir
         r = string.find(k,'R',1,true) and -1 or 1,        -- sequ  dir
         s = string.find(k,'N',1,true) and -1 or 1,        -- charge sign
         p = string.find(k,'P',1,true) and 'slc_p' or '' } -- position

  local f = assert(loadstring(s)) ; setfenv(f, tenv) ; f()

end end end end end

-- end ------------------------------------------------------------------------o
