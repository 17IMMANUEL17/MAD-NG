--[=[
 o-----------------------------------------------------------------------------o
 |
 | Track tests
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: I. Tecker, irina.tecker at cern.ch
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the track module.
  - Test single element maps.

 o-----------------------------------------------------------------------------o
]=]

-- locals ---------------------------------------------------------------------o

local assertTrue, assertEquals, assertAllAlmostEquals in MAD.utest
local printf                                          in MAD.utility
local track, beam, element, sequence, option          in MAD
local drift                                           in element
local observe                                         in element.flags

-- helpers --------------------------------------------------------------------o

local function prtinfo (tbl) -- for debug
  printf("%s:%s: %.8g, %.8g, %.8g, %.8g, %.8g, %.8g, %.8g, %.8g\n",
         tbl.name or 'drift', tbl.kind,
         tbl.s, tbl.l, tbl.x, tbl.px, tbl.y, tbl.py, tbl.t, tbl.pt)
end

-- Drift ----------------------------------------------------------------------o

TestTrackDrift = {}

function TestTrackDrift:setUp ()
  self.optfmt = option.format
  option.format = "%-18.11g"
end

function TestTrackDrift:tearDown ()
  option.format = self.optfmt
end

function TestTrackDrift:testTrackDrift()
  local seq = sequence 'seq' { refer='entry', drift 'df' { l=1 } }
  seq:select(observe)

  local beam = beam { particle='proton', energy=100 }
  local tbl = track { sequence=seq, beam=beam, X0={1, 0.1, -1, -0.1, -0.5, 0.1} }
  assertEquals(#tbl, 3)
--  print()
--  tbl:write(io.stdout)
end

function TestTrackDrift:testTrackDriftNST()
  local seq = sequence 'seq' { refer='entry', drift 'df' { l=1, nst=10 } }
  seq:select(observe)

  local beam = beam { particle='proton', energy=100 }
  local tbl = track { sequence=seq, beam=beam, X0={1, 0.1, -1, -0.1, -0.5, 0.1} }
  assertEquals(#tbl, 3)
--  print()
--  tbl:write(io.stdout)
end

-- end ------------------------------------------------------------------------o
