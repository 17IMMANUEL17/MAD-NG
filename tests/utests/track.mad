--[=[
 o-----------------------------------------------------------------------------o
 |
 | Track tests
 |
 | Methodical Accelerator Design - Copyright CERN 2015+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: I. Tecker, irina.tecker at cern.ch
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the track module.

 o-----------------------------------------------------------------------------o
]=]

-- locals ---------------------------------------------------------------------o

local assertNil, assertTrue, assertEquals in require 'luaunit'
local is_nil, track, beam, option in MAD

local lhcb1, lhcb2, fivecell

-- regression test suite ------------------------------------------------------o

TestTrack = {}

function TestTrack:setUp ()
  if is_nil(fivecell) then
    require 'fivecell_gen'
    require 'fivecell_set'
    fivecell = MADX.fivecell
    assertEquals(#fivecell, 79)
  end

  if is_nil(lhcb1) then
    require 'lhc_as-built_gen'
    require 'lhc_as-built_set'
    require 'lhc_uvar_gen'
    require 'opt_inj_gen'

    lhcb1, lhcb2 = MADX.lhcb1, MADX.lhcb2
    assertEquals(#lhcb1, 6675)
    assertEquals(#lhcb2, 6674)
  end

  self.fmt = option.format
  option.format = "%-18.10g" -- MAD-X default output
end

function TestTrack:tearDown ()
  option.format = self.fmt
end


function TestTrack:testTrackFiveCell()
  local beam = beam { particle='proton', energy=450 }
  local tbl = track { sequence=fivecell, beam=beam }
  assertEquals(#tbl, 79)
  tbl:write('track_fivecell') -- , {'name', 's', 'l', 'x', 'px', 'y', 'py', 't', 'pt'})
 end

function TestTrack:testTrackLHC1()
  local beam = beam { particle='proton', energy=450 }
  local tbl = track { sequence=lhcb1, beam=beam }
  assertEquals(#tbl, 13267)
  tbl:write('track_lhcb1') -- , {'name', 's', 'l', 'x', 'px', 'y', 'py', 't', 'pt'})
 end

-- function TestTrack:testTrack01()
--   require 'first_test'
--
--   local ttt1 in MADX
--   print("Here we are, first test of MAD-NG Physics")
--
--   local fmt = option.format
--   option.format = "%-18.10g" -- MAD-X default output
--
--   local tbl = track { sequence=ttt1, X0= {1e-4,0 ,1e-4,0,0,1e-6}}
--   tbl:write('track', {'name', 's', 'length', 'x', 'px', 'y', 'py', 't', 'pt'})
--   tbl:write('track_all')
--
--   option.format = fmt
-- end

-- end ------------------------------------------------------------------------o
