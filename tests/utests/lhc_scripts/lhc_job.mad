-- ../mad lhc_job.mad

local trkhdr = {'title', 'type', 'origin', 'date', 'time', 'refcol'}
local trkcol = {'name','kind','s','l',
                'C10','C20','C30','C40','C50','C60',
                'C11','C12','C13','C14','C15','C16',
                'C21','C22','C23','C24','C25','C26',
                'C31','C32','C33','C34','C35','C36',
                'C41','C42','C43','C44','C45','C46',
                'C51','C52','C53','C54','C55','C56',
                'C61','C62','C63','C64','C65','C66'}

local twsmapcol = {'name','kind','s','E1','E2','E3','E4','E5','E6',
                                'R11','R12','R13','R14','R15','R16',
                                'R21','R22','R23','R24','R25','R26',
                                'R31','R32','R33','R34','R35','R36',
                                'R41','R42','R43','R44','R45','R46',
                                'R51','R52','R53','R54','R55','R56',
                                'R61','R62','R63','R64','R65','R66'}

local twsoptcol = {'name','s','l','beta11','alfa11','mu1','beta22','alfa22','mu2',
                   'disp1','disp3','re11','re12','re21','re22'}

local function LHC_load ()
  local is_sequence in MAD.typeid

  if not is_sequence(MADX:var_raw'lhcb1') then -- avoid MAD-X warning
    MADX:load('lhc_as-built.seq'    , 'lhc_as-built.mad') -- convert on need
    MADX:load('opticsfile.22_ctpps2', 'opticsfile.22_ctpps2.mad')
--    MADX:load('lhc_unset.mad') -- handmade, must be updated if conversions occur

    local lhcb1, lhcb2 in MADX
    assert(#lhcb1 == 6694, "invalid number of elements in LHCB1 (6694 expected)")
    assert(#lhcb2 == 6721, "invalid number of elements in LHCB2 (6721 expected)")
  end

  return MADX.lhcb1, MADX.lhcb2
end

local function LHC_twiss ()
  local lhcb1, nrj  in MADX
  local beam, twiss, gphys in MAD

  gphys.var.nrm_tol = 5e-9 -- relax normal form checks for large machine

  local beam0 = beam { particle='proton', energy=nrj }
  local tbl, mfw = twiss { sequence=lhcb1, beam=beam0, mapsave=true, chrom=true }

  print("#tbl=", #tbl)
  for i=1,6 do
    tbl:addcol('E'..i, \r -> tbl.M[r][i]:get(1))
  end
  for i=1,6 do for j=1,6 do
    tbl:addcol('R'..i..j, \r -> tbl.M[r][i]:get(j+1))
  end end

  print('q1=' , tbl.q1[1])    ! q1  = 62.310005
  print('q2=' , tbl.q2[1])    ! q2  = 60.320005
  print('dq1=', tbl.dq1[1])   ! dq1 = 20.35834 -- wrong!
  print('dq2=', tbl.dq2[1])   ! dq2 = 20.57798 -- wrong!

  MAD.option.format = "%-.16e"
  tbl:write('Cmad_tw.txt', twsmapcol)

-- twiss                     | chrom
-- q1=62.310000, dq1=1.21357 | dq1=1.21360
-- q2=60.320000, dq2=1.32671 | dq2=1.32786
-- ptc_twiss
-- q1= 0.310007, dq1=1.23317
-- q2= 0.320007, dq2=1.34619
end

local function LHC_track ()
  local lhcb1, nrj in MADX
  local beam, track, gphys, matrix in MAD
  local printf in MAD.utility

  local beam0 = beam { particle='proton',  energy=nrj }

  local dpt = gphys.dp2pt(1e-6, beam0.beta)

  -- MAD-X closed orbits with chrom
!  local X0 = {-5.499762E-04,  1.609342E-08, 5.207712E-09, 1.600252E-04, 0,dpt}
!  local X0 = {-5.500001E-04, -2.523793E-11, 2.207667E-12, 1.600001E-04, 0,0}

  -- PTC closed orbit
!  local X0 = {-5.5000135301803640E-004,-3.1413416565322823E-010,-4.2925112315554718E-010,1.5999978500025504E-004,0,0}
  -- PTC closed orbit with dp=1e-6
!  local X0 = {-5.49977519E-04, 1.57921523E-08, 4.77934325E-09,1.60025045E-04,0.00000000E+00,9.99999990E-07}


  local X0 = {-5.5E-04, 0,0, 1.6E-04, 0,0}
  local tbl, mfw = track {sequence=lhcb1, beam=beam0, observe=false,
                          X0=X0, mapdef=true, mapsave=true, mapdump=2, method=4}

!  printf("#trk=%d, beta=%-.16e, dpt=%-.16e\n", #tbl, beam0.beta, dpt)
  for i=1,6 do
    tbl:addcol('C'..i..'0', \r -> tbl.M[r][i]:get(1))
  end
  for i=1,6 do for j=1,6 do
    tbl:addcol('C'..i..j, \r -> tbl.M[r][i]:get(j+1))
  end end

  MAD.option.format = "% -.16e"
  tbl:write('Cmad_tk.txt', trkcol, trkhdr)

  local tbl1 = MAD.mtable:read('Cmad_tk.txt')
  local tbl2 = MAD.mtable:read('Cptc_tr.txt')
  local m = MAD.matrix(#tbl1,6)
  local v = MAD.vector(#tbl1)
  local w = MAD.vector(#tbl2)
  m:setcol(1,1..#tbl1)
  m:setcol(2,tbl1.s  )
  for i,k in ipairs {'C10','C20','C30','C40'} do
    v:fill(tbl1[k])
    w:fill(tbl2[k])
    m:setcol(i+2,v-w:getvec(1..#tbl1))
  end
  m:print('m')
end

-- run script
LHC_load()
LHC_track()
--LHC_twiss()


--[[
mu1=  0.31000517956107  mu2=  0.320005329731  mu3=  0
#tbl= 13285
q1= 1.3100051799818
q2= 1.3200053294762


++++++ table: summ

            length             orbit5               alfa            gammatr
        26658.8832                 -0    0.0003484807932        53.56863458

                q1                dq1            betxmax              dxmax
       62.30999952        1.213568048        8025.928218        3.188194926

             dxrms             xcomax             xcorms                 q2
       1.526356161      0.01214590114     0.000847219769        60.32000013

               dq2            betymax              dymax              dyrms
       1.326707392        8025.942384        3.093015324        0.351926341

            ycomax             ycorms             deltap            synch_1
     0.01265939852    0.0009129569355                  0                  0

           synch_2            synch_3            synch_4            synch_5
                 0                  0                  0                  0

            nflips
                 0

  Number of warnings: 0
]]