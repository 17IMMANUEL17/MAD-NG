--[=[
 o-----------------------------------------------------------------------------o
 |
 | Plot module DEMO
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 |          A.Z. Teska, aleksandra.teska at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o
]=]

local plot in MAD

-- locals ---------------------------------------------------------------------o

local pi in math
local track, beam, functor, option, survey, vector             in MAD
local assertNil, assertNotNil, assertTrue, assertEquals        in MAD.utest
local drift, marker, quadrupole, sequence, monitor, hkicker,
      vkicker, multipole,  sbend, sextupole, patch, collimator in MAD.element

-- LHC
local function loadLHC()
  assertNotNil(require 'lhc_as-built_gen')
  assertNotNil(require 'lhc_as-built_set')
  assertNotNil(require 'lhc_undefvar'    )
  assertNotNil(require 'opt_inj_gen'     )

  local lhcb1, lhcb2 in MADX
  assertEquals(#lhcb1, 6677)
  assertEquals(#lhcb2, 6676)
  return lhcb1, lhcb2
end

local lhcb1, lhcb2 = loadLHC()
local beam = beam { particle='proton', energy=450 }
local tblLHC  = track  { sequence=lhcb1, beam=beam }
local tblLHC1 = survey { sequence=lhcb1 }

local plotLHC = plot {
  table = tblLHC,
  sequence = lhcb1,
  range = {'E.DS.L5.B1','S.DS.R5.B1'},
  haxis = 's',
  vaxis = {'x','y'},
  interpolate = 'linespoints',
}

local plotSPS = plot 'sps' {
  id = 2,
  table = tblLHC1,
  haxis  = 'x',
  hmargin = 0.3,
  vaxis  = 'z',
  pointsizes = {z=0.1},
}

local plotLHC = plot {
  filename = "lhcIP5.pdf",
  table = tblLHC,
  sequence = lhcb1,
  range = {'E.DS.L5.B1','S.DS.R5.B1'},
  haxis = 's',
  vaxis = {'x','y'},
  interpolate = 'linespoints',
}

local plotLHC = plot {
  filename = "lhcIP5.pdf",
  table = tblLHC1,
  haxis  = 'x',
  vaxis  = 'z',
  pointsizes = {z=0.1},
  hmargin = 0.3
}
