--[=[
 o-----------------------------------------------------------------------------o
 |
 | Range module regression tests - logrange
 |
 | Methodical Accelerator Design - Copyright CERN 2015+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: A.Z. Teska, aleksandra.teska at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide regression test suites for the range module.

 o-----------------------------------------------------------------------------o
]=]

-- locals ---------------------------------------------------------------------o

local assertEquals, assertAlmostEquals, assertTrue, assertFalse,
      assertErrorMsgContains, assertNil, assertNaN, assertIsString
      in require 'luaunit'

local range   , nrange   , irange   , is_range,
      logrange, nlogrange, ilogrange, is_logrange,
      tiny, eps, huge, inf, nan in MAD
local is_function in MAD

-- regression test suite ------------------------------------------------------o

TestLogrange = {}
function TestLogrange:testConstructor()
end

function TestLogrange:testConcatCtor()
end

function TestLogrange:testFields()
end

function TestLogrange:testReadonly()
end

function TestLogrange:testIsLogrange()
end

function TestLogrange:testRange()
end

function TestLogrange:testIsEmpty()
end

function TestLogrange:testNConstructor()
end

function TestLogrange:testNCnstrFields()
end

function TestLogrange:testValue()
  end

function TestLogrange:testGet()
end

function TestLogrange:testIndex()
end

function TestLogrange:testSize()
end

function TestLogrange:testEqual()
end

function TestLogrange:testReverse()
end

function TestLogrange:testNsteplog()
end

function TestLogrange:testBounds()
end

function TestLogrange:testOverlap()
end

function TestLogrange:testIlogrange()
end

-- performance test suite -----------------------------------------------------o

Test_Logrange = {}
function Test_Logrange:testIrange()
end

-- end ------------------------------------------------------------------------o
