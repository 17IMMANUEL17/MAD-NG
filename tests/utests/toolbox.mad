--[=[
 o-----------------------------------------------------------------------------o
 |
 | MAD test suites toolbox
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide common tools for test suites of the MAD application

 o-----------------------------------------------------------------------------o
]=]

local is_sequence in MAD.typeid

local seqdir = \s -> '../share/'..s

local toolbox = {}

function toolbox.loadLHC()
  if not is_sequence(MADX:var_raw'lhcb1') then -- avoid warning
    assert(loadfile(seqdir('LHC/lhc_undef.mad'   )), "unable to load the LHC variables")()
    assert(loadfile(seqdir('LHC/lhc_as-built.mad')), "unable to load the LHC sequences")()
    assert(loadfile(seqdir('LHC/lhc_setup.mad'   )), "unable to load the LHC setup"    )()

    local lhcb1, lhcb2 in MADX
    assert(#lhcb1 == 6677, "invalid number of elements in LHCB1 (6677 expected)")
    assert(#lhcb2 == 6676, "invalid number of elements in LHCB2 (6676 expected)")
  end

  return MADX.lhcb1, MADX.lhcb2
end

function toolbox.loadFiveCell()
  if not is_sequence(MADX:var_raw'fivecell') then
    assert(loadfile(seqdir('FiveCell/fivecell_undef.mad'   )), "unable to load the FiveCell variables")()
    assert(loadfile(seqdir('FiveCell/fivecell_as-built.mad')), "unable to load the FiveCell sequences")()

    local fivecell in MADX
    assert(#fivecell == 81, "invalid number of elements in FiveCell (81 expected)")
  end

  return MADX.fivecell
end

return toolbox