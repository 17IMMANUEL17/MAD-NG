local object, tostring                                          in MAD
local tblcat, tblcpy                                            in MAD.utility
local run_test in require("converge")

-- The setup for the tests ----------------------------------------------------o

local ref_cfg = object "ref" {
  -- How to run the tests
  dorun  = true, -- Default: true 
  dosave = true, -- Default: false
  doprnt = true, -- Default: false
  dodbg  = false, -- Default: false
  doplot = true, -- Default: false
  doptc  = true, -- Default: true
  
  -- list of variables in the tests
  alist    = {"energy", "x0i"}, --attributes list
  tol      = 100, -- Convergence tolerance
  model    = 1,   -- Generally, we converge 1 to 2
  ptcmodel = false,

  -- list of values that are used to run test but are not changed throughout
  order  = 4,        -- 2/4
  icase  = 56,       -- 56/6
  debug  = 0,        -- 0/6
  snm    = -1,
  seql   =  2,

  x0i    = 1..5,       -- 0, 4D, 5D, 5D strong, 6D (see get_mad_str)
}

local function testSBEND()
  local cfg = ref_cfg "sbend" {
    elm =  [[
      SBEND, at=0.75, l=1.5, k0=(pi/1.5/${angle})*${k0}, angle=pi/${angle}, 
      kill_ent_fringe=true, kill_exi_fringe=true;
    ]],

    converge_to = \s => 
      local conv_cfg = tblcpy(s.cur_cfg)
      conv_cfg.model = 2;
      return conv_cfg
    end,
    
    energy = {1, 6500},

    alist  = tblcat(ref_cfg.alist, {"angle", "k0"}), 
    k0     = {1, 0.8, 1.2},
    angle = {10, 100, 1000, 10000},
    plot_info = {
      x_axis_attr = "((math.pi/1.5/${angle})*${k0})/${nslice}",
      title       = "SBend Body Comparison",
      xlabel      = "K0 per slice [unit?]",
      plotcfg     = "set logscale x;",
      filename    = "sbend-body-comparison.png",
    }
  }
  run_test(cfg)
end
local models = {"DKD", "TKT"}
local function testQUAD ()
  local cfg = ref_cfg "quad" {
    elm =  [[
      QUADRUPOLE, at=0.75, l=1.5, k1=${k1}, fringe=0;
    ]],

    converge_to = \s => 
      local conv_cfg = tblcpy(s.cur_cfg)
      conv_cfg.model = 2; conv_cfg.method = 8; conv_cfg.nslice = 40;
      return conv_cfg
    end,
    
    tol = 1e4,
    energy = {1, 6500},

    alist  = tblcat(ref_cfg.alist, {"k1"}), 
    k1     = {1, 0.5, 0.1, 0.05},
    plot_info = \s -> {
      x_axis_attr = "math.sqrt(${k1})/${nslice}",
      title       = "Quad " .. models[s.model[1]] .." Convergence to TKT Method 8 40 slc",
      xlabel      = "sqrt(K1)/No. Slices",
      plotcfg     = "set logscale x;",
      filename    = "quad-".. models[s.model[1]] .."-convergence.png",
    }
  }
  run_test(cfg)
end

local function testSEXT ()
  local cfg = ref_cfg "sext" {
    elm =  [[
      SEXTUPOLE, at=0.75, l=1.5, k2=${k2};
    ]],

    converge_to = \s => 
      local conv_cfg = tblcpy(s.cur_cfg)
      conv_cfg.model = 1; conv_cfg.method = 8; conv_cfg.nslice = 50;
      return conv_cfg
    end,
    
    tol = 1e3,
    energy = {1, 6500},

    alist  = tblcat(ref_cfg.alist, {"k2"}), 
    k2     = {1, 0.1, 0.5, 0.05},
    plot_info = \s -> {
      x_axis_attr = "math.sqrt(${k2})/${nslice}",
      title       = "Sextupole " .. models[s.model[1]] .." Self Comparison",
      xlabel      = "sqrt(K2)/No. Slices",
      plotcfg     = "set logscale x;",
      filename    = "sext-".. models[s.model[1]] .."-comparison.png",
    }
  }
  run_test(cfg)
end

-- testSBEND()
testQUAD()
testSEXT()