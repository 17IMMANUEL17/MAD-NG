-- ../mad test-all-maps.mad TestMis
local object                     in MAD
local tblcat                     in MAD.utility
local run_test                   in require("trackvsptc")

TestMis = {}

-- The tests ------------------------------------------------------------------o
function TestMis:testSBENDtrn() -- Test the body (~2 min)
  local cfg = ref_cfg "sbend_trn" {
    elm = [[
      SBEND, at=0.75, l=1.5, k0=(pi/1.5/${angle_div})*${k0}, angle=pi/${angle_div}, 
      kill_ent_fringe=true, kill_exi_fringe=true,
      dx=${dx}, dy=${dy}, ds=${ds}
    ]],    
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1},

    tol =  50,

    angle_div = {50, 200, 1000},
    k0        = {1},
    dx        = {0,-1e-3, 0.1},
    dy        = {0, 1e-3,-0.1},
    ds        = {0, 1e-3,-0.1},
    alist = tblcat(ref_cfg.alist, {"angle_div", "k0", "ds", "dy", "dx"}),

    plot_info = {
      title    = "SBend Misaligned d(x/y/s) NG v NG Maps",
      filename = "sbend-mis-trans-ngvng.png",
    },
  }

  run_test(cfg)
end

function TestMis:testSBENDmis() !-> ptc does rotation x, y, s not y, -x, s as ng
  local cfg = ref_cfg "sbend_mis" {
    elm = [[
      sbend,
        at=0.75, l=1.5, angle=pi/${angle_div}*1.5, fringe=1,
        dx=${dx}, dy=${dy}, ds=${ds}, dtheta=${dtheta}, dphi=${dphi}, dpsi=${dpsi}
    ]],
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1},

    tol =  50,

    angle_div = {50, 200--[[ , 1000 ]]}, -- _angle of 1000 has suspiciously large errors
    dx        = \s->s.cur_cfg.translate and -1e-3 or 0,
    dy        = \s->s.cur_cfg.translate and  1e-3 or 0,
    ds        = \s->s.cur_cfg.translate and  1e-3 or 0,
    translate = {false, true},
    dtheta    = {0, 1e-3,-0.1},
    dphi      = {0,-1e-3, 0.1},
    dpsi      = {0, 1e-3,-0.1},

    alist = tblcat(ref_cfg.alist, {"angle_div", "translate", "dtheta", "dphi", "dpsi"}),

    plot_info = {
      title    = "SBend Misaligned d(theta/phi/psi) NG v NG Maps",
      filename = "sbend-mis-rot-ngvng.png",
    },
  }
  require("test-tool").args_to_cfg(cfg) -- Need to check if we are doing a cmap test
  if cfg.cmap then
    cfg = cfg "sbend_mis_c" {
      dtheta    = \s->    s.cur_cfg.dodtheta and {0, 1e-3,-0.1} or {0},
      dphi      = \s->not s.cur_cfg.dodtheta and {0,-1e-3, 0.1} or {0},
      dodtheta  = {false, true},

      alist = tblcat({"dodtheta"}, cfg.alist)
    }
    run_test(cfg)
    MAD.warn("TestMis.testSBENDmis: Test limited to not combine dtheta and dphi, as PTC does the rotations in a different order.")
  else
    run_test(cfg)
  end
end

function TestMis:testRBENDmis() !-> ptc does rotation x, y, s not y, -x, s as ng
  local cfg = ref_cfg "rbend_mis" {
    elm = [[
      rbend,
        at=0.75, l=1.5, angle=pi/${angle_div}*1.5, fringe=1,
        dx=${dx}, dy=${dy}, ds=${ds}, dtheta=${dtheta}, dphi=${dphi}, dpsi=${dpsi}, true_rbend=${true_rbend}
    ]],
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1},

    tol =  2000,

    angle_div = {50, 200--[[ , 1000 ]]}, --Very high error for pi/1000 ~ up to 20,000 most likely numerical with rotations near pi.
    translate = {false, true},
    dx        = \s->s.cur_cfg.translate and  1e-2 or 0,
    dy        = \s->s.cur_cfg.translate and  1e-2 or 0,
    ds        = \s->s.cur_cfg.translate and -1e-2 or 0,
    dtheta    = {0, 1e-3,-0.1},
    dphi      = {0,-1e-3, 0.1},
    dpsi      = {0, 1e-3,-0.1},
    true_rbend= {true, false},

    alist = tblcat(ref_cfg.alist, {"true_rbend", "angle_div", "translate", "dtheta", "dphi", "dpsi"}),

    plot_info = {
      title    = "RBend Misaligned d(theta/phi/psi) NG v NG Maps",
      filename = "rbend-mis-rot-ngvng.png",
    },
  }
  
  require("test-tool").args_to_cfg(cfg) -- Need to check if we are doing a cmap test
  if cfg.cmap then
    cfg = cfg "rbend_mis_c" {
      dtheta    = \s -> ((not s.cur_cfg.true_rbend and     s.cur_cfg.dodtheta) and {0, 1e-3,-0.1} or {0}),
      dphi      = \s -> ((not s.cur_cfg.true_rbend and not s.cur_cfg.dodtheta) and {0,-1e-3, 0.1} or {0}),
      dpsi      = \s -> ((not s.cur_cfg.true_rbend                           ) and {0, 1e-3,-0.1} or {0}), 
      dodtheta  = {false, true},

      alist = tblcat({"dodtheta"}, cfg.alist)
    }
    run_test(cfg)
    MAD.warn("TestMis.testRBENDmis: Test limited to not combine dtheta and dphi, and not combining true_rbend along with rotational misalignment, as PTC does the rotations in a different order.")
  else
    run_test(cfg)
  end
end

function TestMis:testQUADtrn()
  local cfg = ref_cfg "quad_trn" {
    elm = [[
      QUADRUPOLE,
        at=0.75, l=1.5, k1=${k1}, dx=${dx}, dy=${dy}, ds=${ds}
    ]],
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1},

    tol =  200,

    k1        = {0, 1},
    dx        = {0,-1e-3, 0.1},
    dy        = {0, 1e-3,-0.1},
    ds        = {0,-1e-3, 0.1},
    alist = tblcat(ref_cfg.alist, {"k1", "dx", "dy", "ds"}),

    plot_info = {
      title    = "Quadrupole Misaligned d(x/y/s) NG v NG Maps",
      filename = "quad-mis-trans-ngvng.png",
    },
  }

  run_test(cfg)
end

function TestMis:testQUADmis() !-> ptc does rotation x, y, s not y, -x, s as ng
  local cfg = ref_cfg "quad_mis" {
    elm = [[
      QUADRUPOLE,
        at=0.75, l=1.5, k1=${k1},
        dx=${dx}, dy=${dy}, ds=${ds},
        dtheta=${dtheta}, dphi=${dphi}, dpsi=${dpsi},
    ]],
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1},

    tol =  2500,

    k1        = {0, 1},
    dx        = \s->s.cur_cfg.translate and  1e-3 or 0,
    dy        = \s->s.cur_cfg.translate and  1e-3 or 0,
    ds        = \s->s.cur_cfg.translate and -1e-3 or 0,
    translate = {false, true},
    -- The order of rotations is different with PTC which means that having a k1 + dtheta + dphi results in different results (1e-10 for 0 order)
    dodtheta  = \s-> s.cur_cfg.k1> 0 and {false, true} or {true},
    dtheta    = \s-> s.cur_cfg.k1> 0 and not s.cur_cfg.dodtheta and {0} or {0,-1e-3, 0.1},
    dphi      = \s-> s.cur_cfg.k1> 0 and     s.cur_cfg.dodtheta and {0} or {0,-1e-3, 0.1},

    dpsi      = {0, 1e-3,-0.1},
    alist = tblcat(ref_cfg.alist, {"k1", "translate", "dodtheta", "dtheta", "dphi", "dpsi"}),

    plot_info = {
      title    = "Quadrupole Misaligned d(theta/phi/psi) NG v NG Maps",
      filename = "quad-mis-rot-ngvng.png",
    },
  }

  run_test(cfg)
end
