local object                     in MAD
local tblcat                     in MAD.utility
local fringe                     in MAD.element.flags
local run_test                   in require("trackvsng")

-- The tests ------------------------------------------------------------------o
TestFringes = {}

function TestFringes:testQUADfQSAD ()
  local qsad in fringe
  fringe.qsad = 4
  local cfg = ref_cfg "quadf_qsad" {
    elm = [[ quadrupole 'qsad' {
      at=0.75, l=1.5, k1=${k1}*${bdir}, fringe=4, f1=${f1}, f2=${f2},       
    }]],
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1, 6500},
    
    tol = 20,

    k1 = {0, -0.15, 0.2},
    f1 = \s->s.cur_cfg.k1>0 and {0, 0.5} or {0},
    f2 = \s->s.cur_cfg.k1>0 and {0, 0.2} or {0},
    alist = tblcat(ref_cfg.alist, {"k1", "f1", "f2"}),

    plot_info = {
      title    = "Quadrupole SAD Fringe NG v NG Maps",
      filename = "quad-qsad-ngvng.png",
    }
  }
  run_test(cfg)
  fringe.qsad = qsad
end

function TestFringes:testSBENDfQSAD ()
  local qsad in fringe
  fringe.qsad = 4
  local cfg = ref_cfg "sbendf_qsad" {
    elm = [[ sbend 'sbend' {
      at=0.75, l=1.5, angle=${tdir}*math.pi/100, k0=${bdir}*math.pi/100/1.5, 
      k1=${k1}*${bdir}, fringe=4, f1=${f1}, f2=${f2},       
    }]],
    model  = {1},
    method = {2},
    nslice = {1},
    energy = {1, 6500},

    tol = 50,

    k1     = {0, -0.15, 0.2},
    f1     = \s->s.cur_cfg.k1>0 and {0, 0.5} or {0},
    f2     = \s->s.cur_cfg.k1>0 and {0, 0.2} or {0},
    alist = tblcat(ref_cfg.alist, {"k1", "f1", "f2"}),

    plot_info = {
      title    = "SBend QSAD Fringe NG v NG Maps",
      filename = "sbend-qsad-ngvng.png",
    }
  }
  run_test(cfg)
  fringe.qsad = qsad
end

function TestFringes:testSBENDfBEND() -- Test the curved fringes
  local cfg = ref_cfg "sbendf_bend" {
    elm = [[sbend 'sbend' {
      at=0.75, l=1.5, 
      angle=${tdir}*math.pi/100*1.5, k0=${k0}*${bdir}*math.pi/100,
      fint=${fint}, fintx=${fintx}, hgap=${hgap}, 
      fringe=MAD.element.flags.fringe.bend,
    }]],
    model  = {1},
    method = {2},    
    nslice = {1},
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 2e3,

    k0      = {0, 0.8, 1},
    fint    = {0, 0.5} ,
    fintx   = {0, 0.7} ,
    hgap    = {0, 0.05},
    alist = tblcat(ref_cfg.alist, {"k0", "fint", "fintx", "hgap"}),

    plot_info = {
      title    = "Curved Fringe NG v NG Maps",
      filename = "sbendf-ngvng.png",
    }
  }
  run_test(cfg)
end

function TestFringes:testQUADfBEND() -- Test the straight fringes
  local cfg = ref_cfg "quadf_bend" {
    elm = [[quadrupole 'quad' {
      at=0.75, l=1.5, 
      k0=${k0}*${bdir}, k1=${k1}*${bdir},
      fint=${fint}, fintx=${fintx}, hgap=${hgap}, 
      fringe=${fringe},
    }]],
    model  = {1},
    method = {2},    
    nslice = {1},
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 1500,

    fringe = {0, fringe.bend},
    k1     = {0, -0.15, 0.2},
    k0     = {0, 1e-2},
    fint   = {0, 0.5} ,
    fintx  = {0, 0.7} ,
    hgap   = {0, 0.05},
    alist = tblcat(ref_cfg.alist, {"fringe", "k0", "k1", "fint", "fintx", "hgap"}),

    plot_info = {
      title    = "Straight Fringe NG v NG Maps",
      filename = "quadf-ngvng.png",
    }
  }
  run_test(cfg)
end


function TestFringes:testSBENDfMULT() -- Test the curved fringes
  local cfg = ref_cfg "sbendf_mult" {
    elm = [[sbend 'sbend' {
      at=0.75, l=1.5, 
      angle=${tdir}*math.pi/100*1.5, k0=${k0}*${bdir}*math.pi/100,
      knl={0, ${bdir}*${k1}, 0, ${bdir}*${k3}}, 
      ksl={0, ${bdir}*${k1s}, 0, ${bdir}*${k3}},
      fringe=MAD.element.flags.fringe.mult,
      frngmax=${frngmax}, 
    }]],
    model  = {1},
    method = {2},    
    nslice = {1},
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 1000,

    k1     = {0, -0.15, 0.2},
    k1s    = {0, -0.15, 0.2},
    k0     = {0, 0.8, 1},
    frngmax = {2, 5},
    k3    = \s-> s.cur_cfg.frngmax>2 and 10 or 0,
    alist = tblcat(ref_cfg.alist, {"k0", "k1s", "k1", "frngmax"}),

    plot_info = {
      title    = "Curved Fringe NG v NG Maps",
      filename = "sbendf-ngvng.png",
    }
  }
  run_test(cfg)
end

function TestFringes:testQUADfMULT() -- Test the straight fringes
  local cfg = ref_cfg "quadf_mult" {
    elm = [[quadrupole 'quad' {
      at=0.75, l=1.5, 
      knl={${bdir}*${k0}, ${bdir}*${k1}, ${bdir}*${k2}}, 
      ksl={0, ${bdir}*${k1s}, ${bdir}*${k2}},
      fringe=MAD.element.flags.fringe.mult,
      frngmax=${frngmax}, 
    }]],
    model  = {1},
    method = {2},    
    nslice = {1},
    energy = {1, 6500},  -- {1, 450, 6500}

    tol = 500,

    k1     = {0, -0.15, 0.2},
    k1s    = {0, -0.15, 0.2},
    k0     = {0, 1e-2},
    frngmax = {2, 5},
    k2    = \s-> s.cur_cfg.frngmax>2 and 10 or 0,
    alist = tblcat(ref_cfg.alist, {"k0", "k1s", "k1", "frngmax"}),

    plot_info = {
      title    = "Straight Fringe NG v NG Maps",
      filename = "quadf-ngvng.png",
    }
  }
  run_test(cfg)
end

function TestFringes:testRFCAVITYf()
  local cfg = ref_cfg "rfcavf" {
    elm = [[rfcavity 'rfcav' {
      l=${l}, volt=${bdir}*${volt}, freq=${freq}, lag=${lag}, fringe=8,
      no_cavity_totalpath=${totalpath}, 
    }]],
    model  = {1, 2},
    method = {2},
    nslice = {1},
    energy = {1, 6500},

    tol = 20,

    volt = {-8, 0, 8},
    freq = {75, 150, 225},
    lag  = {0, 0.8},
    l    = {0, 1.5},
    totalpath = {false, true},
    alist = tblcat(ref_cfg.alist, {"volt", "freq", "lag", "l", "totalpath"}),

    plot_info = {
      title    = "RF Cavity Fringe NG v NG Maps",
      filename = "rfcavf-ngvng.png",
    },  
  }

  run_test(cfg)
end
