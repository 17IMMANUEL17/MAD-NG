${seq_name}: sequence, ${seq_args};
    ${el_name}: ${el_type}, ${el_args};
endsequence;

select, flag=track, clear;
select, flag=track, column={s,x,px,y,py,t,pt};

linrange := (${start})*(1-i/(${count}-1)) + (${stop})*(i/(${count}-1));
logrange := (${start})^(1-i/(${count}-1)) * (${stop})^(i/(${count}-1));

! print header
assign, echo="${output}.madx.tfs", truncate;
print, text="# i ${varname} s x px y py t pt";
assign;

i = 0;
while (i < ${count}) {
    ${varname} = ${varfunc};

    beam, sequence=${seq_name}, ${beam_args};
    use, sequence=${seq_name};

    ! track
    track, onepass;
    start, x=${x}, px=${px}, y=${y}, py=${py}, t=${t}, pt=${pt};
    observe, place=${el_name};
    run, turns=1;
    endtrack;

    ! print results
    assign, echo="${output}.madx.tfs";
    printf, text="%.0f %+.9e %+.9e %+.9e %+.9e %+.9e %+.9e %+.9e %+.9e", value={
      i, ${varname},
      table(track, quadrupole_0, s),
      table(track, quadrupole_0, x),
      table(track, quadrupole_0, px),
      table(track, quadrupole_0, y),
      table(track, quadrupole_0, py),
      table(track, quadrupole_0, t),
      table(track, quadrupole_0, pt),
    };
    assign;

    i = i + 1;
}
