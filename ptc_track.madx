${seq_name}: sequence, ${seq_args};
    ${el_name}: ${el_type}, ${el_args};
endsequence;

select, flag=ptc_track, clear;
select, flag=ptc_track, column={s,x,px,y,py,t,pt};

linrange := (${start})*(1-i/(${count}-1)) + (${stop})*(i/(${count}-1));
logrange := (${start})^(1-i/(${count}-1)) * (${stop})^(i/(${count}-1));

! print header
assign, echo="${output}.madx.tfs", truncate;
print, text="# s x px y py t pt";
assign;

ptc_create_universe;
i = 0;
while (i < ${count}) {
    beam, sequence=${seq_name}, ${beam_args};
    use, sequence=${seq_name};

    ptc_create_layout, model=1, method=2, nst=1, exact, time, -closed_layout;
    ptc_setswitch debuglevel=1, nocavity, time, -totalpath, -fringe;

    ! track
    ptc_start, x=${x}, px=${px}, y=${y}, py=${py}, t=${t}, pt=${pt};
    ptc_observe, place=${el_name};
    ptc_trackline, turns=1;
    ptc_track_end;

    ! print results
    assign, echo="${output}.madx.tfs";
    printf, text="%+.9e %+.9e %+.9e %+.9e %+.9e %+.9e %+.9e", value={
      table(track, quadrupole_0, s),
      table(track, quadrupole_0, x),
      table(track, quadrupole_0, px),
      table(track, quadrupole_0, y),
      table(track, quadrupole_0, py),
      table(track, quadrupole_0, t),
      table(track, quadrupole_0, pt),
    };
    assign;

    i = i + 1;
}
ptc_end;

removefile, file="Maxwellian_bend_for_ptc_electric.txt";
removefile, file="Maxwellian_bend_for_ptc.txt";
removefile, file="internal_mag_pot.txt";
