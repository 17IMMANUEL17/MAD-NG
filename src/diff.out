=== ljit_bc.lua ===
46c46
< local vmdef = require("ljit_vmdef")
---
> local vmdef = require("jit.vmdef")
=== ljit_bcsave.lua ===
28c28
< Save JIT bytecode: mad -b[options] input output
---
> Save LuaJIT bytecode: luajit -b[options] input output
622c622
<   require("ljit_bc").dump(f, savefile(output, "w"), true)
---
>   require("jit.bc").dump(f, savefile(output, "w"), true)
=== ljit_dis_x64.lua ===
11c11
< local dis_x86 = require("ljit_dis_x86")
---
> local dis_x86 = require((string.match(..., ".*%.") or "").."dis_x86")
=== ljit_dis_x86.lua ===
=== ljit_dump.lua ===
40,41d39
< --    1  Print extra information about trace, require t (MAD extension)
< --    2  Print Hotcount table and PC slot on stderr (MAD extension, extend 1)
62c60
< local vmdef = require("ljit_vmdef")
---
> local vmdef = require("jit.vmdef")
80,101d77
< -- MAD extensions -------------------------------------------------------------
< 
< -- MAD has always FFI
< local ffi = require("ffi")
< local _C  = ffi.C
< 
< ffi.cdef[[
< // variables defined in src/lj_trace.c
< extern int        ljmad_ljtrace_debug;
< extern const char ljmad_ljtrace_message[];
< extern const char ljmad_ljtrace_hottbls[];
< ]]
< 
< local function dump_trace_info (tr, otr)
<   local msg = ffi.string(_C.ljmad_ljtrace_message)
<   out:write(msg, "\n")
<   if _C.ljmad_ljtrace_debug > 1 and msg:sub(-1) == "]" then
<     out:write(ffi.string(_C.ljmad_ljtrace_hottbls))
<   end
< --out:write("XCHECK: tr=", tr, ", otr=", otr, "\n")
< end
< 
169c145
<   if not disass then disass = require("ljit_dis_"..jit.arch) end
---
>   if not disass then disass = require("jit.dis_"..jit.arch) end
425c401
<   if not disass then disass = require("ljit_dis_"..jit.arch) end
---
>   if not disass then disass = require("jit.dis_"..jit.arch) end
598d573
<     if _C.ljmad_ljtrace_debug > 0 then dump_trace_info(tr, otr) end       -- MAD
688d662
<     _C.ljmad_ljtrace_debug = 0                                            -- MAD
714d687
<     _C.ljmad_ljtrace_debug = m['2'] and 2 or m['1'] and 1 or 0            -- MAD
718c691
<     if not bcline then bcline = require("ljit_bc").line end
---
>     if not bcline then bcline = require("jit.bc").line end
=== ljit_p.lua ===
46c46
< local vmdef = require("ljit_vmdef")
---
> local vmdef = require("jit.vmdef")
256c256
<   if prof_states == "z" then zone = require("ljit_zone") end
---
>   if prof_states == "z" then zone = require("jit.zone") end
=== ljit_v.lua ===
64c64
< local vmdef = require("ljit_vmdef")
---
> local vmdef = require("jit.vmdef")
=== ljit_vmdef.lua ===
=== ljit_zone.lua ===
