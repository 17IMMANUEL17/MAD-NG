--[=[
 o-----------------------------------------------------------------------------o
 |
 | Utils module
 |
 | Methodical Accelerator Design - Copyright CERN 2015
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide a set of utility functions

 o-----------------------------------------------------------------------------o
]=]

local M = { __help = {} }

-- help -----------------------------------------------------------------------o

M.__help.self = [=[
NAME
  utils

SYNOPSIS
  mad.is_string("yes")
  mad.is_function("no")

DESCRIPTION
  The 'utils' module provides functions useful for MAD:
    is_boolean, is_number, is_string, is_table, is_function,
    is_integer, is_iterable, is_callable, is_comparable, is_iterable.

RETURN VALUES
  A table constaining the utility functions.

SEE ALSO
  None
]=]

-- implementation -------------------------------------------------------------o

-- types

local function is_boolean (a)
  return type(a) == 'boolean'
end

local function is_number (a)
  return type(a) == 'number'
end

local function is_string (a)
  return type(a) == 'string'
end

local function is_function (a)
  return type(a) == 'function'
end

local function is_table (a)
  return type(a) == 'table' and getmetatable(a) == nil
end

-- specializations

local function is_integer (a)
  return type(a) == 'number'
         and a > -2^53 and a < 2^53 and (a % 1) == 0
end

local function is_iterable (a)
  return type(a) == 'table'
         or rawget(getmetatable(a) or {}, '__pairs')
         or rawget(getmetatable(a) or {}, '__ipairs')
end

local function is_callable (a)
  return type(a) == 'function'
         or rawget(getmetatable(a) or {}, '__call')
end

local function is_comparable (a)
  return type(a) == 'number' or type(a) == 'string'
         or rawget(getmetatable(a) or {}, '__eq')
end

local function is_ordered (a)
  return type(a) == 'number' or type(a) == 'string'
         or rawget(getmetatable(a) or {}, '__lt')
         or rawget(getmetatable(a) or {}, '__le')
end

-- end ------------------------------------------------------------------------o

return {
  -- types
  is_boolean    = is_boolean,
  is_number     = is_number,
  is_string     = is_string,
  is_function   = is_function,
  is_table      = is_table,
  -- specializations
  is_integer    = is_integer,
  is_iterable   = is_iterable,
  is_callable   = is_callable,
  is_comparable = is_comparable,
  is_ordered    = is_ordered,
}
