--[=[
 o-----------------------------------------------------------------------------o
 |
 | Command module
 |
 | Methodical Accelerator Design - Copyright CERN 2015+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide root object for commands

 o-----------------------------------------------------------------------------o
]=]

local M = { __help = {} }

-- help -----------------------------------------------------------------------o

M.__help.self = [[
NAME
  command

SYNOPSIS
  cmd = command 'cmd' {}

DESCRIPTION
  The module command provides...

RETURN VALUES
  The command object

SEE ALSO
  Object
]]

-- locals ---------------------------------------------------------------------o

local Object, is_function in MAD

-- implementation -------------------------------------------------------------o

local Command = Object 'Command' {}

local function exec (a)
  local exe = a:get_raw 'exec'
  if exe == false then
    a.exec = nil
    return a
  elseif is_function(exe) then
    a:set_metamethod({ __exec = exe }, true)
    a.exec = nil
    return a
  end
  return rawget(getmetatable(a), '__exec')(a)
end

Command :set_metamethod {
  __init = \s -> exec(s),
  __exec = \s -> error("invalid command (missing exec or __exec definition)"),
}

-- end ------------------------------------------------------------------------o
return {
  Command = Command,

  __help = M.__help,
}
