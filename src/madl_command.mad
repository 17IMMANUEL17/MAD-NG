--[=[
 o-----------------------------------------------------------------------------o
 |
 | Command module
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide root object for commands

 o-----------------------------------------------------------------------------o
]=]

-- help -----------------------------------------------------------------------o

local __help = {}
__help.command = [[
NAME
  command

SYNOPSIS
  cmd = Command 'cmd' {}

DESCRIPTION
  The module command provides...

RETURN VALUES
  The command object

SEE ALSO
  Object
]]
__help.Command = __help.command

-- locals ---------------------------------------------------------------------o

local Object           in MAD
local is_callable      in MAD.concept
local is_nil, is_table in MAD.typeid

-- implementation -------------------------------------------------------------o

local _cmd = {}

-- Root of all commands
local Command = Object 'Command' { kind='command', is_command=true, [_cmd]=true }

local function is_command (a)
  return is_table(a) and not is_nil(a[_cmd])
end

local function exec (a)
  local exec = a:rawget'exec'
  if exec == false then
    a.exec = nil
    return a
  elseif is_callable(exec) then
    a:set_metamethod({ __exec = exec }, true)
    a.exec = nil
    return a
  end
  return rawget(getmetatable(a), '__exec')(a)
end

Command :set_metamethod {
  __init  = \s -> exec(s),
  __exec := error("invalid command (missing exec or __exec definition)", 2),
} :set_readonly()

-- enc ------------------------------------------------------------------------o

MAD.typeid.is_command = is_command

-- end ------------------------------------------------------------------------o
return {
  Command = Command,
  __help  = __help,
}
