--[=[
 o-----------------------------------------------------------------------------o
 |
 | Shapes for plot module
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 |          A.Z. Teska, aleksandra.teska at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provide the set of shapes for plotting the elements

 o-----------------------------------------------------------------------------o
]=]

local rep in MAD.utility
local totable in MAD

local dat = {}

-- shapes ---------------------------------------------------------------------o

dat.sbend = {
  ysym  = "angle",
  yscl  = 0.5,
  shape = {
    x = {{-1, 1, 0.6,-0.6,-1 }},
    y = {{ 1, 1,-1  ,-1  , 1 }},
  }
}

dat.quadrupole = {
  ysym  = 'k1',
  yscl  = 1,
  shape = {
    x = {{-1,-1, 1, 1,-1 }},
    y = {{ 0, 1, 1, 0, 0 }},
  }
}

dat.sextupole = {
  ysym  = 'k2',
  yscl  = 0.75,
  shape = {
    x = {{-1,-1   , 0, 1   , 1, 0   ,-1 }},
    y = {{ 0, 0.67, 1, 0.67, 0,-0.34, 0 }},
  }
}

dat.octupole = {
  ysym  = 'k3',
  yscl  = 0.8,
  shape = {
    x = {{-1,-1    ,-0.6, 0.6, 1    , 1, 0.6,-0.6,-1 }},
    y = {{ 0, 0.625, 1  , 1  , 0.625, 0,-0.4,-0.4, 0 }},
  }
}

dat.decapole = {
  ysym  = 'k4',
  yscl  = 0.8,
  shape = {
    x = {{ 0.4 ,-0.4 ,-0.8,-1    ,-0.8 ,-0.4, 0.4, 0.8 , 1    , 0.8, 0.4  }},
    y = {{-0.25,-0.25, 0  , 0.375, 0.75, 1  , 1  , 0.75, 0.375, 0  ,-0.25 }},
  }
}

dat.kicker = {
  yscl  = 0.5,
  shape = {
    x = {{-1, 0, 1, 0,-1 }},
    y = {{ 0, 1, 0,-1, 0 }},
  }
}

dat.tkicker = {
  yscl  = 0.5,
  shape = {
    x = {{-1, 0, 1, 0, 0, 0,-1 }},
    y = {{ 0, 1, 0,-1, 1,-1, 0 }},
  }
}

dat.hkicker = {
  yscl  = 0.5,
  shape = {
    x = {{-1, 0, 1,-1 }},
    y = {{ 0, 1, 0, 0 }},
  }
}

dat.vkicker = {
  yscl  = 0.5,
  shape = {
    x = {{-1, 0, 1,-1 }},
    y = {{ 0,-1, 0, 0 }},
  }
}

dat.solenoid = {
  ysym  = 'ks',
  yscl  = 0.6,
  shape = {
    x = {
      {-1, 1  , 1,-1  ,-1 },
      {-1,-0.5, 0,-0.5,-1 },
      { 0, 0.5, 1, 0.5, 0 },
    },
    y = {
      { 1, 1  ,-1,-1  , 1 },
      {-1, 1  , 1,-1  ,-1 },
      {-1, 1  , 1,-1  ,-1 },
    },
  }
}

dat.elseparator = {
  ysym = -1,
  yscl = 0.8,
  shape = {
    x = {{-1  , 1  , 0  ,-1   }},
    y = {{ 0.5, 0.5, 1  , 0.5 }},
  },
}

dat.instrument = {
  dashtype = '.',
  yscl  = 0.5,
  shape = {
    x = {{-1,-1, 1, 1,-1,-1 }},
    y = {{ 0, 1, 1,-1,-1, 0 }},
  }
}

dat.rfcavity = {
  ysym  = -1,
  yscl  = 0.8,
  shape = {
    x = {{-1   ,-0.5 ,-0.5, 0.5, 0.5 , 1   ,-1    }},
    y = {{ 0.25, 0.25, 1  , 1  , 0.25, 0.25, 0.25 }},
  }
}

dat.crabcavity = {
  ysym  = -1,
  yscl  = 0.8,
  shape = {
    x = {
      {-1   ,-0.5 ,-0.5, 0.5, 0.5 , 1   ,-1    },
      {-0.5 , 0.5 ,-0.5                        },
    },
    y = {
      { 0.25, 0.25, 1  , 1  , 0.25, 0.25, 0.25 },
      { 0.25, 1   , 0.25                       },
    },
  }
}

dat.twcavity = {
  ysym  = -1,
  yscl  = 0.8,
  shape = {
    x = {
      {-1   ,-0.5 ,-0.5 , 0.5 , 0.5 , 1   ,-1    },
      {-0.5 , 0   , 0.5 ,-0.5                    },
    },
    y = {
      { 0.25, 0.25, 1   , 1   , 0.25, 0.25, 0.25 },
      { 0.25, 1   , 0.25, 0.25                   },
    },
  }
}

dat.collimator = {
  ysym  = -1,
  yscl  = 0.8,
  shape = {
    x = {{-1, 1, 1  ,-1  ,-1 }},
    y = {{ 1, 1, 0.5, 0.5, 1 }},
  }
}

dat.marker = {
  yscl  = 1.2,
  shape = {
    x = {{-1,-1,-1 }},
    y = {{-1, 1,-1 }},
  }
}

dat.rbend  = {
  yscl  = 0.5,
  shape = {
    x = {{-1,-1, 1, 1,-1,-1 }},
    y = {{ 0, 1, 1,-1,-1, 0 }},
  }
}

dat.combined = {
  ysym  = "angle",
  yscl  = 0.5,
  yshft = "k1",
  shape = {
    x = {{-1, 1, 0.6,-0.6,-1 }},
    y = {{ 1, 1,-1  ,-1  , 1 }},
  },
}

dat.srotation = {
  shape   = true,
  ellipse = 0.8,
}

dat.xrotation = dat.srotation
dat.yrotation = dat.srotation

dat.translation = {
  ellipse = 0.8,
  yscl  = 0.5,
  shape = {
    x = {{-0.5, 0.5,-0.5 }},
    y = {{-1  , 1  ,-1   }},
  }
}

dat.default = {
  yscl  = 0.9,
  shape = {
    x = {{-1,-1, -1 }},
    y = {{-1, 1, -1 }},
  }
}

dat.drift = { }

dat.dodecapole  = dat.drift
dat.multipole   = dat.drift
dat.rfmultipole = dat.drift
dat.wiggler     = dat.drift
dat.changedir   = dat.drift
dat.changeref   = dat.drift

dat.monitor     = dat.drift
dat.hmonitor    = dat.drift
dat.vmonitor    = dat.drift
dat.placeholder = dat.drift

dat.compound    = dat.drift
dat.slink       = dat.drift

 -- sanity checks
do
  local element in MAD
  local skip = {  -- list of elements to skip
    element=true, sequence=true, assembly=true, bline=true,
  }
  for _,e in pairs(element) do
    if e.l ~= nil and not skip[e.kind] then
      assert(dat[e.kind], "plot: missing shape detected for "..(e.kind or '?'))
      assert(dat[e.kind], e.kind)
    end
  end
end

-- style ----------------------------------------------------------------------o

dat.colors = {
  "red"        , "blue", "green"    , "orange"   , "yellow",
  "purple"     , "pink", "brown"    , "turquoise", "violet",
  "greenyellow", "gray", "dark-grey", "dark-red" , "gold"  ,
}

dat.dashtypes = rep("solid", #dat.colors)

-- end ------------------------------------------------------------------------o
return dat