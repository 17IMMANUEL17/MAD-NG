--[=[
 o-----------------------------------------------------------------------------o
 |
 | MFlow module
 |
 | Methodical Accelerator Design - Copyright CERN 2016+
 | Support: http://cern.ch/mad  - mad at cern.ch
 | Authors: L. Deniau, laurent.deniau at cern.ch
 | Contrib: -
 |
 o-----------------------------------------------------------------------------o
 | You can redistribute this file and/or modify it under the terms of the GNU
 | General Public License GPLv3 (or later), as published by the Free Software
 | Foundation. This file is distributed in the hope that it will be useful, but
 | WITHOUT ANY WARRANTY OF ANY KIND. See http://gnu.org/licenses for details.
 o-----------------------------------------------------------------------------o

  Purpose:
  - Provides full set of functions and operations on mflow.
  - Support real and complex scalars and GTPSA as inhomogeneous variables.

 o-----------------------------------------------------------------------------o
]=]

local M = {}

-- locals ---------------------------------------------------------------------o

local ffi = require 'ffi'

local _C in MAD

local is_nil, is_number, is_string, is_iterable in MAD.typeid
local setkeys in MAD.utility

local tpsa, ctpsa, gtpsad in MAD

-- required and allowed variable names
local name_req = setkeys{'x', 'px', 'y', 'py', 't', 'pt', 'pz'}
local name_lst = setkeys{'x', 'px', 'y', 'py', 't', 'pt', 'pz'}

-- types ----------------------------------------------------------------------o

-- hidden key.
local _var = {}

local  tpsa_arr  = ffi.typeof 'struct  tpsa* [?]'
local ctpsa_arr  = ffi.typeof 'struct ctpsa* [?]'

local is_mflow = \x -> is_table(a) and rawget(a,_var) ~= nil

-- ctors ----------------------------------------------------------------------o


-- env ------------------------------------------------------------------------o

MAD.typeid.is_mflow = is_mflow

-- end ------------------------------------------------------------------------o
return {
   mflow = mflow,
  __help = require 'madh_mflow',
}
